{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "prefixName": {
      "defaultValue": "foxids",
      "type": "string",
      "metadata": {
        "description": "Prefix of resource names."
      }
    },
    "appServicePlanSize": {
      "defaultValue": "P1V2",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1V2",
        "P2V2",
        "P3V2",
        "P1V3",
        "P2V3",
        "P3V3",
        "P1",
        "P2",
        "P3"
      ],
      "type": "string",
      "metadata": {
        "description": "The instance size of the App Service Plan."
      }
    },
    "appServicePlanSku": {
      "defaultValue": "Standard",
      "allowedValues": [
        "Free",
        "Shared",
        "Basic",
        "Standard",
        "Premium"
      ],
      "type": "string",
      "metadata": {
        "description": "The pricing tier of the App Service plan."
      }
    },
    "keyVaultSkuName": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "Specifies whether the key vault is a standard vault or a premium vault."
      }
    },
    "sendgridFromEmail": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional, Sendgrid from email address."
      }
    },
    "sendgridApiKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional, Sendgrid API key."
      }
    },
    "repoURL": {
      "type": "string",
      "defaultValue": "https://github.com/ITfoxtec/FoxIDs.git",
      "metadata": {
        "description": "The URL for the GitHub repository that contains the project to deploy."
      }
    },
    "branch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "The branch of the GitHub repository to use."
      }
    }
  },
  "variables": {
    "suffix": "[uniqueString(resourceGroup().id, resourceGroup().location)]",
    "foxidsDefaultName": "[toLower(concat(parameters('prefixName'), variables('suffix')))]",
    "foxidsControlSiteName": "[toLower(concat(parameters('prefixName'), 'control', variables('suffix')))]",
    "foxidsSiteEndpoint": "[concat('https://', variables('foxidsDefaultName'), '.azurewebsites.net')]",
    "foxidsControlSiteEndpoint": "[concat('https://', variables('foxidsControlSiteName'), '.azurewebsites.net')]",
    "privateEndpointLog": "[concat(variables('foxidsDefaultName'), '-log')]",
    "privateEndpointCache": "[concat(variables('foxidsDefaultName'), '-cache')]"
  },
  "resources": [
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2022-08-15",
      "name": "[variables('foxidsDefaultName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('foxidsDefaultName'), 'subnet-data')]"
      ],
      "tags": {
        "defaultExperience": "DocumentDB"
      },
      "kind": "GlobalDocumentDB",
      "properties": {
        "enableAutomaticFailover": false,
        "enableMultipleWriteLocations": false,
        "isVirtualNetworkFilterEnabled": true,
        "virtualNetworkRules": [
          {
            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('foxidsDefaultName'), 'subnet-data')]",
            "ignoreMissingVNetServiceEndpoint": false
          }
        ],
        "databaseAccountOfferType": "Standard",
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session",
          "maxIntervalInSeconds": 5,
          "maxStalenessPrefix": 100
        },
        "locations": [
          {
            "locationName": "[resourceGroup().location]",
            "provisioningState": "Succeeded",
            "failoverPriority": 0
          }
        ],
        "capabilities": []
      }
    },
    {
      "type": "microsoft.operationalinsights/workspaces",
      "apiVersion": "2021-12-01-preview",
      "name": "[variables('foxidsDefaultName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "name": "pergb2018"
        },
        "retentionInDays": 30,
        "features": {
          "enableLogAccessUsingOnlyResourcePermissions": true
        },
        "workspaceCapping": {
          "dailyQuotaGb": -1
        },
        "publicNetworkAccessForIngestion": "Disabled",
        "publicNetworkAccessForQuery": "Disabled"
      }
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('foxidsDefaultName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('microsoft.operationalinsights/workspaces', variables('foxidsDefaultName'))]"
      ],
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('foxidsDefaultName'))]": "Resource",
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('foxidsControlSiteName'))]": "Resource"
      },
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Flow_Type": "Redfield",
        "Request_Source": "IbizaAIExtension",
        "DisableIpMasking": true,
        "RetentionInDays": 90,
        "WorkspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces', variables('foxidsDefaultName'))]",
        "IngestionMode": "LogAnalytics",
        "publicNetworkAccessForIngestion": "Disabled",
        "publicNetworkAccessForQuery": "Disabled"
      }
    },
    {
      "type": "Microsoft.Cache/Redis",
      "apiVersion": "2022-05-01",
      "name": "[variables('foxidsDefaultName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "redisVersion": "6.0",
        "sku": {
          "name": "Standard",
          "family": "C",
          "capacity": 0
        },
        "enableNonSslPort": false,
        "minimumTlsVersion": "1.2",
        "publicNetworkAccess": "Disabled",
        "redisConfiguration": {
          "maxmemory-reserved": "30",
          "maxfragmentationmemory-reserved": "30",
          "maxmemory-delta": "30"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2022-07-01",
      "name": "[variables('foxidsDefaultName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('foxidsDefaultName'), 'subnet-data')]",
        "[resourceId('Microsoft.Web/sites', variables('foxidsDefaultName'))]",
        "[resourceId('Microsoft.Web/sites', variables('foxidsControlSiteName'))]"
      ],
      "properties": {
        "sku": {
          "family": "A",
          "name": "[parameters('keyVaultSkuName')]"
        },
        "tenantId": "[subscription().tenantId]",
        "networkAcls": {
          "bypass": "None",
          "defaultAction": "Deny",
          "ipRules": [],
          "virtualNetworkRules": [
            {
              "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('foxidsDefaultName'), 'subnet-data')]",
              "ignoreMissingVnetServiceEndpoint": false
            }
          ]
        },
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(concat('Microsoft.Web/sites/', variables('foxidsDefaultName')), '2018-02-01', 'Full').identity.principalId]",
            "permissions": {
              "keys": [
                "Get",
                "List",
                "Decrypt",
                "Sign"
              ],
              "secrets": [
                "get",
                "List",
                "Set"
              ],
              "certificates": [
                "Get",
                "List",
                "Create"
              ]
            }
          },
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(concat('Microsoft.Web/sites/', variables('foxidsControlSiteName')), '2018-02-01', 'Full').identity.principalId]",
            "permissions": {
              "keys": [
                "Get",
                "List"
              ],
              "secrets": [
                "get",
                "List",
                "Set",
                "Delete"
              ],
              "certificates": [
                "Get",
                "List",
                "Create",
                "Delete",
                "Import",
                "Update"
              ]
            }
          }
        ],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false,
        "enableSoftDelete": true
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[variables('foxidsDefaultName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[parameters('appServicePlanSize')]",
        "tier": "[parameters('appServicePlanSku')]",
        "capacity": 1
      },
      "properties": {
        "name": "[variables('foxidsDefaultName')]",
        "workerSize": "0",
        "numberOfWorkers": "1"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-03-01",
      "name": "[variables('foxidsDefaultName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('foxidsDefaultName'), 'subnet-data')]",
        "[concat('Microsoft.Web/serverfarms/', variables('foxidsDefaultName'))]"
      ],
      "kind": "app",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "name": "[variables('foxidsDefaultName')]",
        "siteConfig": {
          "ftpsState": "Disabled",
          "use32BitWorkerProcess": false,
          "alwaysOn": true,
          "webSocketsEnabled": false
        },
        "reserved": false,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('foxidsDefaultName'))]",
        "clientAffinityEnabled": false,
        "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('foxidsDefaultName'), 'subnet-data')]"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-03-01",
      "name": "[variables('foxidsControlSiteName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('foxidsDefaultName'), 'subnet-data')]",
        "[concat('Microsoft.Web/serverfarms/', variables('foxidsDefaultName'))]"
      ],
      "kind": "app",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "name": "[variables('foxidsControlSiteName')]",
        "siteConfig": {
          "ftpsState": "Disabled",
          "use32BitWorkerProcess": false,
          "alwaysOn": true,
          "webSocketsEnabled": false
        },
        "reserved": false,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('foxidsDefaultName'))]",
        "clientAffinityEnabled": false,
        "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('foxidsDefaultName'), 'subnet-data')]"
      }
    },
    {
      "type": "Microsoft.Web/sites/slots",
      "apiVersion": "2021-03-01",
      "name": "[concat(variables('foxidsDefaultName'), '/test')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('foxidsDefaultName'), 'subnet-data')]",
        "[concat('Microsoft.Web/sites/', variables('foxidsDefaultName'))]"
      ],
      "kind": "app",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "siteConfig": {
          "ftpsState": "Disabled",
          "use32BitWorkerProcess": false,
          "alwaysOn": false,
          "webSocketsEnabled": false,
          "autoSwapSlotName": "production"
        },
        "reserved": false,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('foxidsDefaultName'))]",
        "clientAffinityEnabled": false,
        "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('foxidsDefaultName'), 'subnet-data')]"
      }
    },
    {
      "type": "Microsoft.Web/sites/slots",
      "apiVersion": "2021-03-01",
      "name": "[concat(variables('foxidsControlSiteName'), '/test')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('foxidsDefaultName'), 'subnet-data')]",
        "[concat('Microsoft.Web/sites/', variables('foxidsControlSiteName'))]"
      ],
      "kind": "app",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "siteConfig": {
          "ftpsState": "Disabled",
          "use32BitWorkerProcess": false,
          "alwaysOn": false,
          "webSocketsEnabled": false,
          "autoSwapSlotName": "production"
        },
        "reserved": false,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('foxidsDefaultName'))]",
        "clientAffinityEnabled": false,
        "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('foxidsDefaultName'), 'subnet-data')]"
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2021-03-01",
      "name": "[concat(variables('foxidsDefaultName'), '/appsettings')]",
      "dependsOn": [
        "[concat('Microsoft.Web/sites/', variables('foxidsDefaultName'))]",
        "[resourceId('microsoft.insights/components', variables('foxidsDefaultName'))]",
        "[concat('Microsoft.DocumentDB/databaseAccounts/', variables('foxidsDefaultName'))]",
        "[concat('Microsoft.KeyVault/vaults/', variables('foxidsDefaultName'))]"
      ],
      "properties": {
        "netFrameworkVersion": "v7.0",
        "ApplicationInsights:ConnectionString": "[reference(concat('microsoft.insights/components/', variables('foxidsDefaultName'))).ConnectionString]",
        "Settings:FoxIDsEndpoint": "[variables('foxidsSiteEndpoint')]",
        "Settings:CosmosDb:EndpointUri": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('foxidsDefaultName'))).documentEndpoint]",
        "Settings:KeyVault:EndpointUri": "[reference(concat('Microsoft.KeyVault/vaults/', variables('foxidsDefaultName'))).vaultUri]",
        "Settings:Sendgrid:FromEmail": "[parameters('sendgridFromEmail')]"
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2021-03-01",
      "name": "[concat(variables('foxidsControlSiteName'), '/appsettings')]",
      "dependsOn": [
        "[concat('Microsoft.Web/sites/', variables('foxidsControlSiteName'))]",
        "[resourceId('microsoft.insights/components', variables('foxidsDefaultName'))]",
        "[concat('Microsoft.DocumentDB/databaseAccounts/', variables('foxidsDefaultName'))]",
        "[concat('Microsoft.KeyVault/vaults/', variables('foxidsDefaultName'))]"
      ],
      "properties": {
        "netFrameworkVersion": "v7.0",
        "ApplicationInsights:ConnectionString": "[reference(concat('microsoft.insights/components/', variables('foxidsDefaultName'))).ConnectionString]",
        "Settings:FoxIDsEndpoint": "[variables('foxidsSiteEndpoint')]",
        "Settings:FoxIDsControlEndpoint": "[variables('foxidsControlSiteEndpoint')]",
        "MasterSeedEnabled": false,
        "Settings:CosmosDb:EndpointUri": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('foxidsDefaultName'))).documentEndpoint]",
        "Settings:KeyVault:EndpointUri": "[reference(concat('Microsoft.KeyVault/vaults/', variables('foxidsDefaultName'))).vaultUri]",
        "Settings:ApplicationInsights:WorkspaceId": "[reference(concat('microsoft.operationalinsights/workspaces/', variables('foxidsDefaultName'))).customerId]"
      }
    },
    {
      "type": "Microsoft.Web/sites/slots/config",
      "apiVersion": "2021-03-01",
      "name": "[concat(variables('foxidsDefaultName'), '/test/appsettings')]",
      "dependsOn": [
        "[concat('Microsoft.Web/sites/', variables('foxidsDefaultName'))]",
        "[resourceId('Microsoft.Web/sites/slots', variables('foxidsDefaultName'), 'test')]",
        "[resourceId('microsoft.insights/components/', variables('foxidsDefaultName'))]",
        "[concat('Microsoft.DocumentDB/databaseAccounts/', variables('foxidsDefaultName'))]",
        "[concat('Microsoft.KeyVault/vaults/', variables('foxidsDefaultName'))]"
      ],
      "properties": {
        "netFrameworkVersion": "v7.0",
        "PROJECT": "src/FoxIDs/FoxIDs.csproj",
        "SCM_BUILD_ARGS": "-p:Configuration=Release",
        "Settings:FoxIDsEndpoint": "[variables('foxidsSiteEndpoint')]",
        "ApplicationInsights:ConnectionString": "[reference(concat('microsoft.insights/components/', variables('foxidsDefaultName'))).ConnectionString]",
        "Settings:CosmosDb:EndpointUri": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('foxidsDefaultName'))).documentEndpoint]",
        "Settings:KeyVault:EndpointUri": "[reference(concat('Microsoft.KeyVault/vaults/', variables('foxidsDefaultName'))).vaultUri]",
        "Settings:Sendgrid:FromEmail": "[parameters('sendgridFromEmail')]"
      }
    },
    {
      "type": "Microsoft.Web/sites/slots/config",
      "apiVersion": "2021-03-01",
      "name": "[concat(variables('foxidsControlSiteName'), '/test/appsettings')]",
      "dependsOn": [
        "[concat('Microsoft.Web/sites/', variables('foxidsControlSiteName'))]",
        "[resourceId('Microsoft.Web/sites/slots', variables('foxidsControlSiteName'), 'test')]",
        "[resourceId('microsoft.insights/components/', variables('foxidsDefaultName'))]",
        "[concat('Microsoft.DocumentDB/databaseAccounts/', variables('foxidsDefaultName'))]",
        "[concat('Microsoft.KeyVault/vaults/', variables('foxidsDefaultName'))]"
      ],
      "properties": {
        "netFrameworkVersion": "v7.0",
        "PROJECT": "src/FoxIDs.Control/FoxIDs.Control.csproj",
        "SCM_BUILD_ARGS": "-p:Configuration=Release",
        "ApplicationInsights:ConnectionString": "[reference(concat('microsoft.insights/components/', variables('foxidsDefaultName'))).ConnectionString]",
        "Settings:FoxIDsEndpoint": "[variables('foxidsSiteEndpoint')]",
        "Settings:FoxIDsControlEndpoint": "[variables('foxidsControlSiteEndpoint')]",
        "Settings:CosmosDb:EndpointUri": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('foxidsDefaultName'))).documentEndpoint]",
        "Settings:KeyVault:EndpointUri": "[reference(concat('Microsoft.KeyVault/vaults/', variables('foxidsDefaultName'))).vaultUri]",
        "Settings:ApplicationInsights:WorkspaceId": "[reference(concat('microsoft.operationalinsights/workspaces/', variables('foxidsDefaultName'))).customerId]",
        "Settings:DisableBackgroundQueueService": "true"
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('foxidsDefaultName'), '/slotconfignames')]",
      "dependsOn": [
        "[concat('Microsoft.Web/sites/', variables('foxidsDefaultName'))]",
        "[resourceId('Microsoft.Web/sites/config', variables('foxidsDefaultName'), 'appsettings')]"
      ],
      "properties": {
        "appSettingNames": [ "PROJECT", "SCM_BUILD_ARGS", "ApplicationInsights:ConnectionString", "Settings:FoxIDsEndpoint", "Settings:CosmosDb:EndpointUri", "Settings:KeyVault:EndpointUri", "Settings:Sendgrid:FromEmail" ]
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('foxidsControlSiteName'), '/slotconfignames')]",
      "dependsOn": [
        "[concat('Microsoft.Web/sites/', variables('foxidsControlSiteName'))]",
        "[resourceId('Microsoft.Web/sites/config', variables('foxidsControlSiteName'), 'appsettings')]"
      ],
      "properties": {
        "appSettingNames": [ "PROJECT", "SCM_BUILD_ARGS", "ApplicationInsights:ConnectionString", "Settings:FoxIDsEndpoint", "Settings:FoxIDsControlEndpoint", "MasterSeedEnabled", "Settings:CosmosDb:EndpointUri", "Settings:KeyVault:EndpointUri", "Settings:ApplicationInsights:WorkspaceId", "Settings:DisableBackgroundQueueService" ]
      }
    },
    {
      "type": "Microsoft.Web/sites/slots/sourcecontrols",
      "apiVersion": "2021-02-01",
      "name": "[concat(variables('foxidsDefaultName'), '/test/web')]",
      "dependsOn": [
        "[concat('Microsoft.Web/sites/', variables('foxidsDefaultName'))]",
        "[resourceId('Microsoft.Web/sites/config', variables('foxidsDefaultName'), 'slotconfignames')]",
        "[resourceId('Microsoft.Web/sites/slots', variables('foxidsDefaultName'), 'test')]",
        "[resourceId('Microsoft.Web/sites/slots/config', variables('foxidsDefaultName'), 'test', 'appsettings')]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('foxidsDefaultName'), 'Settings--CosmosDb--PrimaryKey')]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('foxidsDefaultName'), 'Settings--RedisCache--ConnectionString')]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('foxidsDefaultName'), 'Settings--Sendgrid--ApiKey')]"
      ],
      "properties": {
        "repoUrl": "[parameters('repoURL')]",
        "branch": "[parameters('branch')]",
        "IsManualIntegration": true
      }
    },
    {
      "type": "Microsoft.Web/sites/slots/sourcecontrols",
      "apiVersion": "2021-02-01",
      "name": "[concat(variables('foxidsControlSiteName'), '/test/web')]",
      "dependsOn": [
        "[concat('Microsoft.Web/sites/', variables('foxidsControlSiteName'))]",
        "[resourceId('Microsoft.Web/sites/config', variables('foxidsControlSiteName'), 'slotconfignames')]",
        "[resourceId('Microsoft.Web/sites/slots', variables('foxidsControlSiteName'), 'test')]",
        "[resourceId('Microsoft.Web/sites/slots/config', variables('foxidsControlSiteName'), 'test', 'appsettings')]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('foxidsDefaultName'), 'Settings--CosmosDb--PrimaryKey')]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('foxidsDefaultName'), 'Settings--RedisCache--ConnectionString')]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('foxidsDefaultName'), 'Settings--Sendgrid--ApiKey')]",
        "[resourceId('Microsoft.Web/sites/slots/sourcecontrols', variables('foxidsDefaultName'), 'test', 'web')]"
      ],
      "properties": {
        "repoUrl": "[parameters('repoURL')]",
        "branch": "[parameters('branch')]",
        "IsManualIntegration": true
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2016-10-01",
      "name": "[concat(variables('foxidsDefaultName'), '/Settings--RedisCache--ConnectionString')]",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('foxidsDefaultName'))]",
        "[concat('Microsoft.Cache/Redis/', variables('foxidsDefaultName'))]"
      ],
      "properties": {
        "value": "[concat(variables('foxidsDefaultName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('foxidsDefaultName')), '2015-08-01').primaryKey)]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2016-10-01",
      "name": "[concat(variables('foxidsDefaultName'), '/Settings--CosmosDb--PrimaryKey')]",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('foxidsDefaultName'))]",
        "[concat('Microsoft.DocumentDB/databaseAccounts/', variables('foxidsDefaultName'))]"
      ],
      "properties": {
        "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('foxidsDefaultName')), '2015-11-06').primaryMasterKey]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2016-10-01",
      "name": "[concat(variables('foxidsDefaultName'), '/Settings--Sendgrid--ApiKey')]",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('foxidsDefaultName'))]"
      ],
      "properties": {
        "value": "[parameters('sendgridApiKey')]"
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2018-09-01-preview",
      "name": "[guid(uniqueString(variables('foxidsDefaultName'), 'read', variables('foxidsControlSiteName')))]",
      "scope": "[format('microsoft.operationalinsights/workspaces/{0}', variables('foxidsDefaultName'))]",
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
        "principalId": "[reference(concat('Microsoft.Web/sites/', variables('foxidsControlSiteName')), '2018-02-01', 'Full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('foxidsControlSiteName'))]",
        "[resourceId('microsoft.operationalinsights/workspaces', variables('foxidsDefaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2022-01-01",
      "name": "[variables('foxidsDefaultName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.1.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "subnet-data",
            "properties": {
              "addressPrefix": "10.1.0.0/24",
              "serviceEndpoints": [
                {
                  "service": "Microsoft.AzureCosmosDB",
                  "locations": [
                    "[resourceGroup().location]"
                  ]
                },
                {
                  "service": "Microsoft.KeyVault",
                  "locations": [
                    "[resourceGroup().location]"
                  ]
                }
              ],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            },
            "type": "Microsoft.Network/virtualNetworks/subnets"
          },
          {
            "name": "subnet-log",
            "properties": {
              "addressPrefix": "10.1.1.0/24",
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            },
            "type": "Microsoft.Network/virtualNetworks/subnets"
          },
          {
            "name": "subnet-cache",
            "properties": {
              "addressPrefix": "10.1.2.0/24",
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            },
            "type": "Microsoft.Network/virtualNetworks/subnets"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2022-01-01",
      "name": "[concat(variables('foxidsDefaultName'), '/subnet-data')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('foxidsDefaultName'))]"
      ],
      "properties": {
        "addressPrefix": "10.1.0.0/24",
        "serviceEndpoints": [
          {
            "service": "Microsoft.AzureCosmosDB",
            "locations": [
              "[resourceGroup().location]"
            ]
          },
          {
            "service": "Microsoft.KeyVault",
            "locations": [
              "[resourceGroup().location]"
            ]
          }
        ],
        "delegations": [
          {
            "name": "delegation",
            "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/subnets', variables('foxidsDefaultName'), 'subnet-data'), '/delegations/delegation')]",
            "properties": {
              "serviceName": "Microsoft.Web/serverfarms"
            },
            "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
          }
        ],
        "privateEndpointNetworkPolicies": "Enabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2022-01-01",
      "name": "[concat(variables('foxidsDefaultName'), '/subnet-log')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('foxidsDefaultName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('foxidsDefaultName'), 'subnet-data')]"
      ],
      "properties": {
        "addressPrefix": "10.1.1.0/24",
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2022-01-01",
      "name": "[concat(variables('foxidsDefaultName'), '/subnet-cache')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('foxidsDefaultName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('foxidsDefaultName'), 'subnet-data')]"
      ],
      "properties": {
        "addressPrefix": "10.1.2.0/24",
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      }
    },
    {
      "type": "microsoft.insights/privatelinkscopes",
      "apiVersion": "2021-07-01-preview",
      "name": "[variables('foxidsDefaultName')]",
      "location": "global",
      "properties": {
        "accessModeSettings": {
          "exclusions": [],
          "queryAccessMode": "PrivateOnly",
          "ingestionAccessMode": "PrivateOnly"
        }
      }
    },
    {
      "type": "microsoft.insights/privatelinkscopes/scopedresources",
      "apiVersion": "2021-07-01-preview",
      "name": "[concat(variables('foxidsDefaultName'), '/scoped-', variables('foxidsDefaultName'), '-insights')]",
      "dependsOn": [
        "[resourceId('microsoft.insights/privatelinkscopes', variables('foxidsDefaultName'))]",
        "[resourceId('microsoft.insights/components', variables('foxidsDefaultName'))]"
      ],
      "properties": {
        "linkedResourceId": "[resourceId('microsoft.insights/components', variables('foxidsDefaultName'))]"
      }
    },
    {
      "type": "microsoft.insights/privatelinkscopes/scopedresources",
      "apiVersion": "2021-07-01-preview",
      "name": "[concat(variables('foxidsDefaultName'), '/scoped-', variables('foxidsDefaultName'), '-workspaces')]",
      "dependsOn": [
        "[resourceId('microsoft.insights/privatelinkscopes', variables('foxidsDefaultName'))]",
        "[resourceId('microsoft.operationalinsights/workspaces', variables('foxidsDefaultName'))]"
      ],
      "properties": {
        "linkedResourceId": "[resourceId('microsoft.operationalinsights/workspaces', variables('foxidsDefaultName'))]"
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2022-01-01",
      "name": "[variables('privateEndpointLog')]",
      "dependsOn": [
        "[resourceId('microsoft.insights/privateLinkScopes', variables('foxidsDefaultName'))]",
        "[resourceId('microsoft.insights/privatelinkscopes/scopedresources', variables('foxidsDefaultName'), concat('scoped-', variables('foxidsDefaultName'), '-insights'))]",
        "[resourceId('microsoft.insights/privatelinkscopes/scopedresources', variables('foxidsDefaultName'), concat('scoped-', variables('foxidsDefaultName'), '-workspaces'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('foxidsDefaultName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('foxidsDefaultName'), 'subnet-log')]"
      ],
      "location": "[resourceGroup().location]",
      "properties": {
        "privateLinkServiceConnections": [
          {
            "name": "[variables('privateEndpointLog')]",
            "properties": {
              "privateLinkServiceId": "[resourceId('microsoft.insights/privateLinkScopes', variables('foxidsDefaultName'))]",
              "groupIds": [
                "azuremonitor"
              ],
              "privateLinkServiceConnectionState": {
                "status": "Approved",
                "description": "Auto-Approved",
                "actionsRequired": "None"
              }
            }
          }
        ],
        "customNetworkInterfaceName": "[concat(variables('privateEndpointLog'), '-nic')]",
        "subnet": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('foxidsDefaultName'), 'subnet-log')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
      "apiVersion": "2022-01-01",
      "name": "[concat(variables('privateEndpointLog'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointLog'))]",
        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.monitor.azure.com')]",
        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.oms.opinsights.azure.com')]",
        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.ods.opinsights.azure.com')]",
        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.agentsvc.azure-automation.net')]",
        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.blob.core.windows.net')]",
        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.redis.cache.windows.net')]"
      ],
      "properties": {
        "privateDnsZoneConfigs": [
          {
            "name": "privatelink-monitor-azure-com",
            "properties": {
              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.monitor.azure.com')]"
            }
          },
          {
            "name": "privatelink-oms-opinsights-azure-com",
            "properties": {
              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.oms.opinsights.azure.com')]"
            }
          },
          {
            "name": "privatelink-ods-opinsights-azure-com",
            "properties": {
              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.ods.opinsights.azure.com')]"
            }
          },
          {
            "name": "privatelink-agentsvc-azure-automation-net",
            "properties": {
              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.agentsvc.azure-automation.net')]"
            }
          },
          {
            "name": "privatelink-blob-core-windows-net",
            "properties": {
              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.blob.core.windows.net')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2018-09-01",
      "name": "privatelink.monitor.azure.com",
      "location": "global",
      "properties": {
        "maxNumberOfRecordSets": 25000,
        "maxNumberOfVirtualNetworkLinks": 1000,
        "maxNumberOfVirtualNetworkLinksWithRegistration": 100
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2018-09-01",
      "name": "[concat('privatelink.monitor.azure.com', '/link_to_', variables('foxidsDefaultName'))]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.monitor.azure.com')]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('foxidsDefaultName'))]"
      ],
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('foxidsDefaultName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2018-09-01",
      "name": "privatelink.oms.opinsights.azure.com",
      "location": "global",
      "properties": {
        "maxNumberOfRecordSets": 25000,
        "maxNumberOfVirtualNetworkLinks": 1000,
        "maxNumberOfVirtualNetworkLinksWithRegistration": 100
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2018-09-01",
      "name": "[concat('privatelink.oms.opinsights.azure.com', '/link_to_', variables('foxidsDefaultName'))]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.oms.opinsights.azure.com')]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('foxidsDefaultName'))]"
      ],
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('foxidsDefaultName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2018-09-01",
      "name": "privatelink.ods.opinsights.azure.com",
      "location": "global",
      "properties": {
        "maxNumberOfRecordSets": 25000,
        "maxNumberOfVirtualNetworkLinks": 1000,
        "maxNumberOfVirtualNetworkLinksWithRegistration": 100
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2018-09-01",
      "name": "[concat('privatelink.ods.opinsights.azure.com', '/link_to_', variables('foxidsDefaultName'))]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.ods.opinsights.azure.com')]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('foxidsDefaultName'))]"
      ],
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('foxidsDefaultName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2018-09-01",
      "name": "privatelink.agentsvc.azure-automation.net",
      "location": "global",
      "properties": {
        "maxNumberOfRecordSets": 25000,
        "maxNumberOfVirtualNetworkLinks": 1000,
        "maxNumberOfVirtualNetworkLinksWithRegistration": 100
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2018-09-01",
      "name": "[concat('privatelink.agentsvc.azure-automation.net', '/link_to_', variables('foxidsDefaultName'))]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.agentsvc.azure-automation.net')]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('foxidsDefaultName'))]"
      ],
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('foxidsDefaultName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2018-09-01",
      "name": "privatelink.blob.core.windows.net",
      "location": "global",
      "properties": {
        "maxNumberOfRecordSets": 25000,
        "maxNumberOfVirtualNetworkLinks": 1000,
        "maxNumberOfVirtualNetworkLinksWithRegistration": 100
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2018-09-01",
      "name": "[concat('privatelink.blob.core.windows.net', '/link_to_', variables('foxidsDefaultName'))]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.blob.core.windows.net')]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('foxidsDefaultName'))]"
      ],
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('foxidsDefaultName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2022-01-01",
      "name": "[variables('privateEndpointCache')]",
      "dependsOn": [
        "[resourceId('Microsoft.Cache/Redis', variables('foxidsDefaultName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('foxidsDefaultName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('foxidsDefaultName'), 'subnet-cache')]"
      ],
      "location": "[resourceGroup().location]",
      "properties": {
        "privateLinkServiceConnections": [
          {
            "name": "[variables('privateEndpointCache')]",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.Cache/Redis', variables('foxidsDefaultName'))]",
              "groupIds": [
                "redisCache"
              ],
              "privateLinkServiceConnectionState": {
                "status": "Approved",
                "description": "Auto-Approved",
                "actionsRequired": "None"
              }
            }
          }
        ],
        "customNetworkInterfaceName": "[concat(variables('privateEndpointCache'), '-nic')]",
        "subnet": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('foxidsDefaultName'), 'subnet-cache')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
      "apiVersion": "2022-01-01",
      "name": "[concat(variables('privateEndpointCache'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointCache'))]",
        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.redis.cache.windows.net')]"
      ],
      "properties": {
        "privateDnsZoneConfigs": [
          {
            "name": "privatelink.redis.cache.windows.net",
            "properties": {
              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.redis.cache.windows.net')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2018-09-01",
      "name": "privatelink.redis.cache.windows.net",
      "location": "global",
      "properties": {
        "maxNumberOfRecordSets": 25000,
        "maxNumberOfVirtualNetworkLinks": 1000,
        "maxNumberOfVirtualNetworkLinksWithRegistration": 100
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2018-09-01",
      "name": "[concat('privatelink.redis.cache.windows.net', '/link_to_', variables('foxidsDefaultName'))]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.redis.cache.windows.net')]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('foxidsDefaultName'))]"
      ],
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('foxidsDefaultName'))]"
        }
      }
    }
  ]
}

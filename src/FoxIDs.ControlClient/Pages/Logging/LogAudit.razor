@page "/{tenantName}/logaudit"
@using FoxIDs.Client.Models.ViewModels
@using FoxIDs.Client.Shared.Components
@using FoxIDs.Models.Api
@inherits PageBase

@if (ClientSettings.LogOption != LogOptions.Stdout)
{
    <div class="pb-2">
        <div class="info-text pt-0">
            Search the <DocsLink Page="logging">logs</DocsLink> and change what should be logged in the environment.
        </div>
    </div>

    <ul class="nav nav-tabs">
        <li class="nav-item">
            <a class="nav-link" href="@logsHref">Logs</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@logUsageHref">Usages</a>
        </li>
        <li class="nav-item">
            <a class="nav-link active">Audit</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@logSettingsHref">Settings</a>
        </li>
    </ul>

    <div class="tab-content pt-4">
        @if (ClientSettings.LogOption == LogOptions.ApplicationInsights)
        {
            <div class="alert alert-info" role="alert">
                The audit logs are available after a few minutes because the logs are processed in Application Insights before making them available.
            </div>
        }

        @if (!auditLoadError.IsNullOrWhiteSpace())
        {
            <div class="alert alert-danger" role="alert">
                @auditLoadError
            </div>
        }

        <PageEditForm @ref="auditLogRequestForm" TModel="AuditLogRequestViewModel" OnValidSubmit="OnAuditLogRequestValidSubmitAsync">
            <FInputText @bind-Value="auditLogRequestForm.Model.FromTime" For="@(() => auditLogRequestForm.Model.FromTime)" />
            <FInputSelect @bind-Value="auditLogRequestForm.Model.TimeInterval" For="@(() => auditLogRequestForm.Model.TimeInterval)">
                <option value="@LogTimeIntervals.ThirtySeconds">30 seconds</option>
                <option value="@LogTimeIntervals.OneMinute">1 minute</option>
                <option value="@LogTimeIntervals.FiveMinutes">5 minutes</option>
                <option value="@LogTimeIntervals.FifteenMinutes">15 minutes</option>
                <option value="@LogTimeIntervals.ThirtyMinutes">30 minutes</option>
                <option value="@LogTimeIntervals.OneHour">1 hour</option>
                <option value="@LogTimeIntervals.SixHours">6 hours</option>
                <option value="@LogTimeIntervals.TwelveHours">12 hours</option>
                <option value="@LogTimeIntervals.TwentyfourHours">24 hours</option>
            </FInputSelect>
            <FInputSelect Class="active" @bind-Value="auditLogRequestForm.Model.AuditType" For="@(() => auditLogRequestForm.Model.AuditType)">
                <option value="">All</option>
                @foreach (var auditType in auditTypes)
                {
                    var text = auditType switch
                    {
                        AuditType.ChangePassword => "Change password",
                        AuditType.CreateUser => "Create user",
                        _ => auditType.ToString()
                    };

                    <option value="@auditType">@text</option>
                }
            </FInputSelect>
            @if (IsMasterTenant)
            {
                <FInputText @bind-Value="auditLogRequestForm.Model.TenantName" For="@(() => auditLogRequestForm.Model.TenantName)" />
                <FInputText @bind-Value="auditLogRequestForm.Model.TrackName" For="@(() => auditLogRequestForm.Model.TrackName)" />
            }
            else if (IsMasterTrack)
            {
                <FInputText @bind-Value="auditLogRequestForm.Model.TrackName" For="@(() => auditLogRequestForm.Model.TrackName)" />
            }
            <FInputTextFilter @bind-Value="auditLogRequestForm.Model.Filter" For="@(() => auditLogRequestForm.Model.Filter)" />
        </PageEditForm>

        @if (auditLogResponse != null && auditLogResponse.ResponseTruncated)
        {
            <div class="alert alert-warning" role="alert">
                The result set is too big and not all audit logs are shown.
            </div>
        }

        <ul class="list-group list-group-stripes">
            @if (auditLogResponse == null)
            {
                <li class="list-group-item"><i>Loading...</i></li>
            }
            else
            {
                if (auditLogResponse.Items.Count() <= 0)
                {
                    <li class="list-group-item"><i>No audit logs found.</i></li>
                }

                @foreach (var item in auditLogResponse.Items)
                {
                    <li class="list-group-item">
                        @if (item.Type == LogItemTypes.Sequence)
                        {
                            <div>
                                <div><b>@item.Type.ToString()</b> @item.Timestamp.TimeToString()</div>
                                <div>Sequence ID: @item.SequenceId</div>

                                @RenderAuditMetadata(item)

                                <ul class="list-group">
                                    @foreach (var sSubItem in item.SubItems)
                                    {
                                        <li class="list-group-item">
                                            @if (sSubItem.Type == LogItemTypes.Operation)
                                            {
                                                <div>
                                                    <div><b>@sSubItem.Type.ToString()</b> @sSubItem.Timestamp.TimeToString()</div>
                                                    <div>Operation ID: @sSubItem.OperationId</div>

                                                    @RenderAuditMetadata(sSubItem)

                                                    <ul class="list-group">
                                                        @foreach (var oSubItem in sSubItem.SubItems)
                                                        {
                                                            <li class="list-group-item">
                                                                <ELogItem Item="oSubItem" IsMasterTenant="IsMasterTenant" IsMasterTrack="IsMasterTrack" />
                                                                @RenderAuditMetadata(oSubItem)
                                                                @RenderData(oSubItem)
                                                            </li>
                                                        }
                                                    </ul>
                                                </div>
                                            }
                                            else
                                            {
                                                <ELogItem Item="sSubItem" IsMasterTenant="IsMasterTenant" IsMasterTrack="IsMasterTrack" />
                                                @RenderAuditMetadata(sSubItem)
                                                @RenderData(sSubItem)
                                            }
                                        </li>
                                    }
                                </ul>
                            </div>
                        }
                        else if (item.Type == LogItemTypes.Operation)
                        {
                            <div>
                                <div><b>@item.Type.ToString()</b> @item.Timestamp.TimeToString()</div>
                                <div>Operation ID: @item.OperationId</div>

                                @RenderAuditMetadata(item)

                                <ul class="list-group">
                                    @foreach (var oSubItem in item.SubItems)
                                    {
                                        <li class="list-group-item">
                                            <ELogItem Item="oSubItem" IsMasterTenant="IsMasterTenant" IsMasterTrack="IsMasterTrack" />
                                            @RenderAuditMetadata(oSubItem)
                                            @RenderData(oSubItem)
                                        </li>
                                    }
                                </ul>
                            </div>
                        }
                        else
                        {
                            <ELogItem Item="item" IsMasterTenant="IsMasterTenant" IsMasterTrack="IsMasterTrack" />

                            @RenderAuditMetadata(item)
                        }

                        @RenderData(item)
                    </li>
                }
            }
        </ul>
    </div>
}
else
{
    <div class="alert alert-info" role="alert">
        Audit log search is not supported with Stdout logging.
    </div>
}
@page "/{tenantName}/riskpasswords"
@inherits PageBase

<h3>Risk Passwords</h3>

@if (!riskPasswordLoadError.IsNullOrWhiteSpace())
{
    <div class="alert alert-danger" role="alert">
        @riskPasswordLoadError
    </div>
}

<h4>Upload</h4>

<div class="card">
    <div class="card-body @(uploadRiskPassword != null && uploadRiskPassword.Edit ? "active" : string.Empty)">
        @if (uploadRiskPassword.Edit)
        {
            <PageEditForm @ref="uploadRiskPassword.Form" TModel="UploadRiskPasswordViewModel" OnAfterInit="UploadRiskPasswordViewModelAfterInit" OnValidSubmit="OnUploadRiskPasswordValidSubmitAsync">
                <div class="modal-header">
                    Upload risk passwords
                </div>
                <div class="modal-body">
                    <div class="alert alert-info" role="alert">
                        The risk passwords are uploaded as bulk which has a higher consumption. Please make sure to adjust the Cosmos DB provisioned throughput (RU/s) temporarily.
                    </div>
                    <div class="alert alert-info" role="alert">
                        Download <a href="https://haveibeenpwned.com/Passwords" target="_blank">pwned passwords (ordered by prevalence)</a>.
                    </div>
                    <div class="form-group active-group active">
                        <div class="drag-drop-zone input-control">
                            <input type="file" @ref=inputTypeFileElement @onchange="OnUploadRiskPasswordFileSelected" />
                            @uploadRiskPassword.CertificateFileStatus
                        </div>
                        <ValidationMessage For="@(() => uploadRiskPassword.Form.Model.File)" />
                    </div>
                    <div class="active-group active">
                        <div class="card bg-light">
                            <div class="card-body px-3 py-2">
                                @uploadRiskPassword.Form.Model.UploadCount
                            </div>
                        </div>
                        <Label For="@(() => uploadRiskPassword.Form.Model.UploadCount)" class="label-control" />
                    </div>
                    @if (uploadRiskPassword.UploadState == GeneralUploadRiskPasswordViewModel.UploadStates.Done)
                    {
                        <div class="alert alert-info" role="alert">
                            Risk passwords uploaded.
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    @if (uploadRiskPassword.UploadState == GeneralUploadRiskPasswordViewModel.UploadStates.Ready)
                    {
                        <button type="submit" class="btn btn-primary">Start upload</button>
                    }
                    @if (uploadRiskPassword.UploadState == GeneralUploadRiskPasswordViewModel.UploadStates.Active)
                    {
                        <button type="button" class="btn btn-primary" @onclick="UploadRiskPasswordStop">Stop upload</button>
                    }
                    @if (uploadRiskPassword.UploadState != GeneralUploadRiskPasswordViewModel.UploadStates.Active)
                    {
                        <button type="button" class="btn btn-secondary" @onclick="UploadRiskPasswordClose">@(uploadRiskPassword.UploadState == GeneralUploadRiskPasswordViewModel.UploadStates.Done ? "Done" : "Cancel")</button>
                    }
                </div>
            </PageEditForm>
        }
        else
        {
            <div class="active-group active">
                <div class="card bg-light">
                    <div class="card-body px-3 py-2">
                        @uploadRiskPassword.RiskPasswordCount
                    </div>
                </div>
                <Label For="@(() => uploadRiskPassword.RiskPasswordCount)" class="label-control" />
            </div>
            <button type="button" class="btn btn-link btn-xs" @onclick="UploadRiskPasswords"><span class="oi oi-plus" aria-hidden="true"></span> Upload risk passwords</button>
        }
    </div>
</div>


<h4 class="pt-4">Test if password is at risk</h4>
<div class="card">
    <div class="card-body">
        <PageEditForm @ref="testRiskPasswordForm" TModel="TestRiskPasswordViewModel" OnValidSubmit="OnTestRiskPasswordValidSubmitAsync">
            <div class="modal-body pt-0 px-0">
                <FInputPassword @bind-Value="testRiskPasswordForm.Model.Password" For="@(() => testRiskPasswordForm.Model.Password)" Focus="true" />
                @if (testRiskPasswordForm.Model.IsValid.HasValue)
                {
                    if (testRiskPasswordForm.Model.IsValid.Value)
                    {
                        <div class="alert alert-info" role="alert">
                            Password has not appeared in a data breach and is probably not at risk.
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-danger" role="alert">
                            Password has appeared in a data breach and is at risk.
                        </div>
                    }
                }
            </div>
            <div class="modal-footer px-0">
                <button type="submit" class="btn btn-primary mr-0">Test password</button>
            </div>
        </PageEditForm>
    </div>
</div>

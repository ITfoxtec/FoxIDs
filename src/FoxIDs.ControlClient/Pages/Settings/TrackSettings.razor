@page "/{tenantName}/envsettings"
@inherits PageBase

<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link active">Environment</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@mailSettingsHref">Mail</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@smsSettingsHref">SMS</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@claimMappingsHref">Claim mappings</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@textsHref">Texts</a>
    </li>
    @if (IsMasterTenant)
    {
        if (ClientSettings.EnablePayment)
        {
            <li class="nav-item">
                <a class="nav-link" href="@smsPricesHref">SMS Prices</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="@plansHref">Plans</a>
            </li>
        }
        <li class="nav-item">
            <a class="nav-link" href="@riskPasswordsHref">Risk Passwords</a>
        </li>
    }
</ul>

<div class="tab-content">
    <PageEditForm @ref="trackSettingsForm" TModel="TrackSettingsViewModel" OnValidSubmit="OnUpdateTrackValidSubmitAsync">
        @if (TrackSelectedLogic.IsTrackSelected)
        {
            <div class="modal-body px-0">
                @if (!deleteTrackError.IsNullOrWhiteSpace())
                {
                    <div class="alert alert-danger" role="alert">
                        @deleteTrackError
                    </div>
                }
                <FInputText @bind-Value="trackSettingsForm.Model.DisplayName" For="@(() => trackSettingsForm.Model.DisplayName)" />
                <FFieldText @bind-Value="trackSettingsForm.Model.Name" For="@(() => trackSettingsForm.Model.Name)" />
                <FInputNumber @bind-Value="trackSettingsForm.Model.SequenceLifetime" For="@(() => trackSettingsForm.Model.SequenceLifetime)" Focus="true" />
                <FInputToggle @bind-Value="trackSettingsForm.Model.AutoMapSamlClaims" For="@(() => trackSettingsForm.Model.AutoMapSamlClaims)" TextType="e.d" />

                <div class="info-text">
                    Add your company name and address to send branded SMS and emails.
                </div>
                <div class="row">
                    <div class="col-md-8">
                        <FInputText @bind-Value="trackSettingsForm.Model.CompanyName" For="@(() => trackSettingsForm.Model.CompanyName)" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-8">
                        <FInputText @bind-Value="trackSettingsForm.Model.AddressLine1" For="@(() => trackSettingsForm.Model.AddressLine1)" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-8">
                        <FInputText @bind-Value="trackSettingsForm.Model.AddressLine2" For="@(() => trackSettingsForm.Model.AddressLine2)" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-6">
                        <FInputText @bind-Value="trackSettingsForm.Model.PostalCode" For="@(() => trackSettingsForm.Model.PostalCode)" />
                    </div>
                    <div class="col-6">
                        <FInputText @bind-Value="trackSettingsForm.Model.City" For="@(() => trackSettingsForm.Model.City)" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-8">
                        <FInputText @bind-Value="trackSettingsForm.Model.StateRegion" For="@(() => trackSettingsForm.Model.StateRegion)" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-8">
                        <FInputText @bind-Value="trackSettingsForm.Model.Country" For="@(() => trackSettingsForm.Model.Country)" />
                    </div>
                </div>

                <div class="mr-auto">
                    <h4 class="pt-5 pb-3">User & login settings</h4>
                </div>
                <div class="pt-1">
                    <div class="form-group active-group active">
                        <div class="card">
                            <div class="card-body mt-2">
                                <div class="info-text mr-auto pt-0">
                                    Users are locked for an observation period after @trackSettingsForm.Model.MaxFailingLogins failed logins within @(trackSettingsForm.Model.FailingLoginCountLifetime / 3600) hours. Users are locked for @(trackSettingsForm.Model.FailingLoginObservationPeriod / 60) minutes and automatically unlocked after the observation period.
                                </div>
                                <FInputNumber @bind-Value="trackSettingsForm.Model.MaxFailingLogins" For="@(() => trackSettingsForm.Model.MaxFailingLogins)" />
                                <FInputNumber @bind-Value="trackSettingsForm.Model.FailingLoginCountLifetime" For="@(() => trackSettingsForm.Model.FailingLoginCountLifetime)" />
                                <FInputNumber @bind-Value="trackSettingsForm.Model.FailingLoginObservationPeriod" For="@(() => trackSettingsForm.Model.FailingLoginObservationPeriod)" />
                            </div>
                        </div>
                        <Label For="@(() => trackSettingsForm.Model.MaxFailingLogins)" LabelText="Failing login locks" class="label-control" />
                    </div>
                </div>
                <FInputNumber @bind-Value="trackSettingsForm.Model.PasswordLength" For="@(() => trackSettingsForm.Model.PasswordLength)" />
                <FInputToggleN @bind-Value="trackSettingsForm.Model.CheckPasswordComplexity" For="@(() => trackSettingsForm.Model.CheckPasswordComplexity)" />
                <FInputToggleN @bind-Value="trackSettingsForm.Model.CheckPasswordRisk" For="@(() => trackSettingsForm.Model.CheckPasswordRisk)" />

                <div class="pt-1">
                    <div class="form-group active-group active">
                        <div class="card">
                            <div class="card-body mt-2">
                                <div class="info-text mr-auto pt-0">
                                    External password validation and notifications:
                                    <ul>
                                        <li>Use the validation API to validate a password.</li>
                                        <li>Use the notification API to receive notifications about password changes.</li>
                                        <li>If you need both validation and notification, use the validation API - if the password is valid, trigger a notification about the change.</li>
                                        <li>Important: You usually don't need to use both APIs together. Only call both APIs if you must call different systems.</li>
                                    </ul>
                                </div>                                
                                <FInputToggle @bind-Value="trackSettingsForm.Model.ExternalPassword.EnabledValidation" For="@(() => trackSettingsForm.Model.ExternalPassword.EnabledValidation)" />
                                <FInputToggle @bind-Value="trackSettingsForm.Model.ExternalPassword.EnabledNotification" For="@(() => trackSettingsForm.Model.ExternalPassword.EnabledNotification)" />
                                <FInputText @bind-Value="trackSettingsForm.Model.ExternalPassword.ApiUrl" For="@(() => trackSettingsForm.Model.ExternalPassword.ApiUrl)" />
                                <FInputText @bind-Value="trackSettingsForm.Model.ExternalPassword.Secret" For="@(() => trackSettingsForm.Model.ExternalPassword.Secret)" />
                            </div>
                        </div>
                        <Label For="@(() => trackSettingsForm.Model.ExternalPassword)" LabelText="External password API" class="label-control" />
                    </div>
                </div>

                <div class="mr-auto">
                    <h4 class="pt-5 pb-3">Iframe settings</h4>
                </div>
                @{var includeAllowIframeOnDomainsLabel = trackSettingsForm.Model.AllowIframeOnDomains?.Count > 0;}
                <div class="form-group active-group active">
                    <Label For="@(() => trackSettingsForm.Model.AllowIframeOnDomains)" class="label-control" />
                    <FInputTextList @bind-ValueList="trackSettingsForm.Model.AllowIframeOnDomains" For="@(() => trackSettingsForm.Model.AllowIframeOnDomains)" IncludeActiveFormGroup="false" DynamicFirstRow="true" AddOneMoreName="Domain" />
                </div>

                @if (deleteTrackAcknowledge)
                {
                    <div class="alert alert-danger" role="alert">
                        <div>
                            You are about to delete environment "@(trackSettingsForm.Model.DisplayName ?? trackSettingsForm.Model.Name)" including the user repository, are you sure?
                        </div>

                        <div class="py-3">
                            To confirm that you want to delete, type 'delete'.
                        </div>
                        <FInputText @bind-Value="deleteTrackAcknowledgeText" For="@(() => deleteTrackAcknowledgeText)" LabelText="Confirm, type 'delete'" />

                        <div class="mt-3">
                            <button type="button" class="btn btn-secondary" @onclick="DeleteTrackAsync">Yes delete environment</button>
                            <button type="button" class="btn btn-secondary" @onclick="@(() => deleteTrackAcknowledge = false)">No</button>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer px-0">
                @if (!IsMasterTrack)
                {
                    <button type="button" class="btn btn-link @(trackWorking ? "disabled" : "")" @onclick="@(() => deleteTrackAcknowledge = true)">Delete environment</button>
                }
                <button type="submit" class="btn btn-primary @(trackWorking ? "disabled" : "")">Update</button>
            </div>
        }
    </PageEditForm>
</div>

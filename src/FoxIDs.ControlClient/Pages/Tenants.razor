@page "/{tenantName}/tenants"
@inherits PageBase

<PageEditForm @ref="searchTenantForm" TModel="FilterTenantViewModel" OnValidSubmit="OnTenantFilterValidSubmitAsync">
    <FInputTextFilter @bind-Value="searchTenantForm.Model.FilterValue" For="@(() => searchTenantForm.Model.FilterValue)" />
</PageEditForm>

<ul class="list-group">
    @if (tenants != null)
    {
        @if (tenants.Count() > 0)
        {
            @foreach (var tenant in tenants)
            {
                <li class="list-group-item @(tenant.Edit ? "active" : "d-flex justify-content-between align-items-center")">
                    @if (!tenant.Error.IsNullOrWhiteSpace())
                    {
                        <div class="alert alert-danger" role="alert">
                            @tenant.Error
                        </div>
                    }
                    @if (tenant.Edit)
                    {
                        <PageEditForm @ref="tenant.Form" TModel="TenantViewModel" OnValidSubmit="@(async (editContext) => await OnEditTenantValidSubmitAsync(tenant, editContext))">
                            <div class="modal-header">
                                Tenant
                            </div>
                            <div class="modal-body">
                                <FFieldText @bind-Value="tenant.Form.Model.Name" For="@(() => tenant.Form.Model.Name)" />
                                <input type="hidden" @bind="tenant.Form.Model.Name" />
                                @if (planInfoList != null)
                                {
                                    <FInputSelect @bind-Value="tenant.Form.Model.PlanName" For="@(() => tenant.Form.Model.PlanName)">
                                        @foreach (var planInfo in planInfoList)
                                        {
                                            <option value="@planInfo.Name">@(planInfo.DisplayName ?? planInfo.Name)</option>
                                        }
                                    </FInputSelect>
                                }
                                <FInputText @bind-Value="tenant.Form.Model.CustomDomain" For="@(() => tenant.Form.Model.CustomDomain)" Focus="true" />
                                <FInputToggle @bind-Value="tenant.Form.Model.CustomDomainVerified" For="@(() => tenant.Form.Model.CustomDomainVerified)" TextType="y.n" />

                                @if (!string.IsNullOrEmpty(tenant.Form.Model.Name) && !Constants.Routes.MasterTenantName.Equals(tenant.Form.Model.Name, StringComparison.OrdinalIgnoreCase) && ClientSettings.EnablePayment)
                                {
                                    tenant.Form.Model.Customer ??= new Customer();
                                }
                                @if (tenant.Form.Model.Customer != null)
                                {
                                    <div class="pt-3">
                                        <div class="active-group active">
                                            <div class="card">
                                                <div class="card-body">
                                                    <div class="info-text">
                                                        Add your company name and VAT number (e.g., DK24610452) and address in order to avoid Danish VAT.
                                                    </div>
                                                    <FInputText @bind-Value="tenant.Form.Model.Customer.InvoiceEmail" For="@(() => tenant.Form.Model.Customer.InvoiceEmail)" />
                                                    <FInputText @bind-Value="tenant.Form.Model.Customer.Name" For="@(() => tenant.Form.Model.Customer.Name)" />
                                                    <div class="row">
                                                        <div class="col-md-6">
                                                            <FInputText @bind-Value="tenant.Form.Model.Customer.VatNumber" For="@(() => tenant.Form.Model.Customer.VatNumber)" />
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-md-8">
                                                            <FInputText @bind-Value="tenant.Form.Model.Customer.AddressLine1" For="@(() => tenant.Form.Model.Customer.AddressLine1)" />
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-md-8">
                                                            <FInputText @bind-Value="tenant.Form.Model.Customer.AddressLine2" For="@(() => tenant.Form.Model.Customer.AddressLine2)" />
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-6">
                                                            <FInputText @bind-Value="tenant.Form.Model.Customer.PostalCode" For="@(() => tenant.Form.Model.Customer.PostalCode)" />
                                                        </div>
                                                        <div class="col-6">
                                                            <FInputText @bind-Value="tenant.Form.Model.Customer.City" For="@(() => tenant.Form.Model.Customer.City)" />
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-md-8">
                                                            <FInputText @bind-Value="tenant.Form.Model.Customer.StateRegion" For="@(() => tenant.Form.Model.Customer.StateRegion)" />
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-md-8">
                                                            <FInputText @bind-Value="tenant.Form.Model.Customer.Country" For="@(() => tenant.Form.Model.Customer.Country)" />
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <label for="card-number" class="label-control">Customer information</label>
                                        </div>
                                    </div>

                                    <div class="pt-3">
                                        <div class="active-group active">
                                            <div class="card">
                                                <div class="card-body">
                                                    @if (tenant.Form.Model.Payment == null)
                                                    {
                                                        <div>There is not registered a payment method.</div>
                                                    }
                                                    else
                                                    {
                                                        @if (!tenant.Form.Model.Payment.IsActive)
                                                        {
                                                            <div class="validation-message">Not active</div>
                                                        }
                                                        @if (!tenant.Form.Model.Payment.CardNumber.IsNullOrWhiteSpace())
                                                        {
                                                            <div class="font-weight-bold">@tenant.Form.Model.Payment.CardLabel ****@tenant.Form.Model.Payment.CardNumber</div>
                                                        }
                                                        @if (!tenant.Form.Model.Payment.CardHolder.IsNullOrWhiteSpace())
                                                        {
                                                            <div>@tenant.Form.Model.Payment.CardHolder</div>
                                                        }
                                                        <div>Expiry date: @tenant.Form.Model.Payment.CardExpiryMonth/@tenant.Form.Model.Payment.CardExpiryYear</div>
                                                    }
                                                </div>
                                            </div>
                                            <label for="card-number" class="label-control">Payment method</label>
                                        </div>
                                    </div>
                                }
                            </div>

                            @if (tenant.DeleteAcknowledge)
                            {
                                <div class="modal-footer">
                                    <div class="alert alert-danger" role="alert">
                                        <div>
                                            You are about to delete tenant "@tenant.Name" possible including tracks and user repositories which will also be deleted. There is no way back a tenant can not be restored! Are you sure?
                                        </div>

                                        <div class="mt-3">
                                            <button type="button" class="btn btn-secondary" @onclick="@(async () => await DeleteTenantAsync(tenant))">Yes delete tenant</button>
                                            <button type="button" class="btn btn-secondary" @onclick="@(() => tenant.DeleteAcknowledge = false)">No</button>
                                        </div>
                                    </div>
                                </div>
                            }
                            <div class="modal-footer">
                                @if (tenant.Name != Constants.Routes.MasterTenantName)
                                {
                                    <a class="btn btn-link @(tenantWorking ? "disabled" : "")" href="@tenant.LoginUri" target="_blank">Open tenant</a>
                                }
                                <button type="button" class="btn btn-link @(tenantWorking ? "disabled" : "")" @onclick="@(() => tenant.DeleteAcknowledge = true)">Delete</button>
                                <button type="submit" class="btn btn-primary @(tenantWorking ? "disabled" : "")">Update</button>
                                <button type="button" class="btn btn-secondary @(tenantWorking ? "disabled" : "")" @onclick="@(() => tenant.Edit = false)">Close</button>
                            </div>
                        </PageEditForm>
                    }
                    else
                    {
                        <button class="btn btn-link" @onclick="@(async () => await ShowUpdateTenantAsync(tenant))">
                            @TenantInfoText(tenant)
                        </button>
                        @if (tenant.Name != Constants.Routes.MasterTenantName)
                        {
                            <a class="btn btn-sm btn-outline-dark" href="@tenant.LoginUri" target="_blank">Open tenant</a>
                        }
                    }
                </li>
            }
        }
        else if (!searchTenantForm.Model.FilterValue.IsNullOrWhiteSpace())
        {
            <div class="font-italic pl-1">No match</div>
        }
    }
</ul>
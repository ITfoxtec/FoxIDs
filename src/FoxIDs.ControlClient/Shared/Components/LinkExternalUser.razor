<div class="info-text">
    The external users are linked with a claim type (e.g. <code>sub</code> or <code>email</code>) after the claim transformation on the authentication method has been performed.
    @if (IsSaml)
    {
        <div class="small">
            Optionally use corresponding SAML 2.0 claims:<br />
            <ul>
                <li><code>sub</code> equals to <code>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier</code></li>
                <li><code>email</code> equals to <code>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress</code></li>
            </ul>
        </div>
    }
</div>
<FInputText @bind-Value="Model.LinkClaimType" For="@(() => Model.LinkClaimType)" />

<FInputToggle @bind-Value="Model.AutoCreateUser" For="@(() => Model.AutoCreateUser)" TextType="y.n" />
<FInputToggle @bind-Value="Model.RequireUser" For="@(() => Model.RequireUser)" TextType="y.n" />

<div class="info-text">
    By default, claims on external users are added to the received claims with the exception of the <code>sub</code> claim, which overrides the received <code>sub</code> claim.
    <br />
    Claims on external users can optionally override received and transformed claims.
</div>

<FInputToggle @bind-Value="Model.OverwriteClaims" For="@(() => Model.OverwriteClaims)" TextType="y.n" />
<DynamicElements Model="Model" IncludeEmailElement=true />
<div class="info-text pb-0 mb-0">The claim transforms is performed after the user has signed up, but before the user is saved.</div>
<OAuthClaimTransforms Model="Model" />

@code {
    [Parameter]
    public ILinkExternalUser Model { get; set; }

    [Parameter]
    public bool IsSaml { get; set; }
}

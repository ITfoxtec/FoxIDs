<div class="modal fade @(show ? "show" : "")" style="@(show ? "display: block; padding-right: 17px;" : "")" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog">
    <div class="modal-dialog @DialogClassName" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Title <small class="font-italic">@SubTitle</small></h5>
                @if (!DisableClose) {
                    <button type="button" class="close" title="Close" @onclick="@(() => Hide())" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                }
            </div>
            @ChildContent
        </div>
    </div>
</div>
@if (show)
{
    <div class="modal-backdrop fade show"></div>
}

@code {
    [Parameter]
    public string DialogCssClass { get; set; } = "modal-md modal-lg";

    bool show = false;

    public bool IsShown => show;

    [Parameter]
    public bool DisableClose { get; set; }

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public string SubTitle { get; set; }

    [Parameter]
    public string DialogClass { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    private string DialogClassName => string.IsNullOrWhiteSpace(DialogClass) ? "modal-md modal-lg modal-dialog-scrollable" : DialogClass;

    public void Show()
    {
        if (!show)
        {
            show = true;
            StateHasChanged();
        }
    }

    public void Hide()
    {
        if (show)
        {
            show = false;
            StateHasChanged();
        }
    }
}
@typeparam TModel

<div class="form-group active-group active">
    <div class="card card-row">
        <div class="card-body px-0 py-0">
            <div class="d-flex align-content-start flex-wrap">
                @if (upParties != null)
                {
                    @foreach (var allowUpParty in EditDownPartyForm.Model.AllowUpParties)
                    {
                        <div class="card card-row">
                            <div class="card-body px-2 py-1 d-flex">
                                <div class="mr-auto">
                                    @{
                                        var allowUpPartyText = UpPartyInfoText(allowUpParty);
                                    }
                                    <div>@allowUpPartyText.displayName</div>
                                    @if(!allowUpPartyText.profileDisplayName.IsNullOrWhiteSpace())
                                    {
                                        <div>Profile: @allowUpPartyText.profileDisplayName</div>
                                    }
                                    <div class="small">@allowUpPartyText.type</div>
                                </div>
                                <div class="p-0">
                                    <button type="button" class="btn btn-link py-0 pl-2 pr-0" title="Remove" @onclick="@(() => OnRemoveUpPartyAsync(allowUpParty))"><span class="oi oi-circle-x" aria-hidden="true"></span></button>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>

    <Label For="@(() => EditDownPartyForm.Model.AllowUpParties)" class="label-control" />
    <ValidationMessage For="@(() => EditDownPartyForm.Model.AllowUpParties)" />
    <button type="button" class="btn btn-link btn-xs" @onclick="@(async () => await LoadDefaultUpPartyFilter())">
        <span class="oi oi-pencil" aria-hidden="true"></span> Change allowed authentication methods
    </button>
</div>

<Modal @ref="upPartyFilterModal" Title="Select authentication methods">
    <div class="modal-body">
        <PageEditForm @ref="upPartyNamesFilterForm" TModel="FilterUpPartyViewModel" OnValidSubmit="OnUpPartyNamesFilterValidSubmitAsync">
            <div class="form-group active-group pb-2">
                <FInputTextFilter @bind-Value="upPartyNamesFilterForm.Model.FilterName" For="@(() => upPartyNamesFilterForm.Model.FilterName)" IncludeActiveFormGroup="false" />
            </div>
        </PageEditForm>
        @if (upPartyFilters != null)
        {
            @if (upPartyFilters.Count() > 0)
            {
                <div class="list-striped">                    
                    @foreach (var upPartyFilter in upPartyFilters.Where(u => !u.Hide))
                    {
                        <div class="d-flex">
                            <InputCheckbox @bind-Value="upPartyFilter.Selected" class="mr-1" />
                            <button type="button" class="dropdown-item btn btn-link px-1" @onclick="@(() => OnAddUpParty(upPartyFilter))">
                                <div>@upPartyFilter.DisplayName</div>
                                @if (!upPartyFilter.ProfileDisplayName.IsNullOrWhiteSpace())
                                {
                                    <div>Profile: @upPartyFilter.ProfileDisplayName</div>
                                }
                                <div class="small">@upPartyFilter.TypeText</div>
                            </button>
                        </div>
                        <div class="list-striped-item"></div>
                    }
                </div>
            }
            else if (!upPartyNamesFilterForm.Model.FilterName.IsNullOrWhiteSpace())
            {
                <div class="font-italic px-1">No match</div>
            }
        }
        <div class="modal-footer">
            <button type="button" class="btn btn-primary @(upPartyFilters?.Count() > 0 ? "" : "disabled")" @onclick="OnUpPartyFilterSelectAsync">Select</button>
            <button type="button" class="btn btn-secondary" @onclick="@(() => upPartyFilterModal.Hide())">Cancel</button>
        </div>
    </div>
</Modal>
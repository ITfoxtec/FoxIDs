@typeparam TModel

<div class="form-group active-group active">
    <div class="card card-row">
        <div class="card-body px-0 py-0">
            <div class="d-flex align-content-start flex-wrap">
                @if (upParties != null)
                {
                    @foreach (var allowUpParty in EditDownPartyForm.Model.AllowUpParties)
                    {
                        <div class="card card-row">
                            <div class="card-body px-2 py-1 d-flex">
                                <div class="mr-auto">
                                    @{
                                        var allowUpPartyText = UpPartyInfoText(allowUpParty);
                                    }
                                    <div>@allowUpPartyText.displayName</div>
                                    @if(!allowUpPartyText.profileDisplayName.IsNullOrWhiteSpace())
                                    {
                                        <div>Profile: @allowUpPartyText.profileDisplayName</div>
                                    }
                                    <div class="small">@allowUpPartyText.type</div>
                                </div>
                                <div class="p-0">
                                    <button type="button" class="btn btn-link py-0 pl-2 pr-0" title="Remove" @onclick="@(() => OnRemoveUpPartyNameAsync(allowUpParty))"><span class="oi oi-circle-x" aria-hidden="true"></span></button>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>

    <Label For="@(() => EditDownPartyForm.Model.AllowUpParties)" class="label-control" />
    <ValidationMessage For="@(() => EditDownPartyForm.Model.AllowUpParties)" />

    <ul class="navbar-nav mr-auto">
        <li class="nav-item dropdown">
            <button type="button" class="dropdown-toggle btn btn-link btn-xs" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"  @onclick="@(async () => await LoadDefaultUpPartyFilter())">
                <span class="oi oi-plus" aria-hidden="true"></span> Add allowed authentication methods
            </button>
           
            <div class="dropdown-menu search-dropdown px-3 pb-3" aria-labelledby="allowUpPartyNamesDropdown">
                <PageEditForm @ref="upPartyNamesFilterForm" TModel="FilterUpPartyViewModel" OnValidSubmit="OnUpPartyNamesFilterValidSubmitAsync">
                    <div class="form-group active-group pb-2">
                        <FInputTextFilter @bind-Value="upPartyNamesFilterForm.Model.FilterName" For="@(() => upPartyNamesFilterForm.Model.FilterName)" IncludeActiveFormGroup="false" />
                    </div>
                </PageEditForm>
                @if (upPartyFilters != null)
                {
                    @if (upPartyFilters.Count() > 0)
                    {
                        @foreach (var upPartyFilter in upPartyFilters)
                        {
                            <button type="button" class="dropdown-item btn btn-link px-1" @onclick="@(() => OnAddUpPartyNameAsync(upPartyFilter.Name))">
                                @{
                                    var upPartyFilterText = UpPartyInfoText(upPartyFilter);
                                }
                                <div>@upPartyFilterText.displayName</div>
                                @if (!upPartyFilterText.profileDisplayName.IsNullOrWhiteSpace())
                                {
                                    <div>Profile: @upPartyFilterText.profileDisplayName</div>
                                }
                                <div class="small">@upPartyFilterText.type</div>
                            </button>
                        }
                    }
                    else if (!upPartyNamesFilterForm.Model.FilterName.IsNullOrWhiteSpace())
                    {
                        <div class="font-italic px-1">No match</div>
                    }
                }
            </div>
        </li>
    </ul>
</div>
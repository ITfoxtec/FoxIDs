@inherits LayoutComponentBase

<BlazoredToasts Timeout="2" ShowCloseButton=false RemoveToastsOnNavigation=true />

<div class="min-vh-100 d-flex flex-column justify-content-between">
    <div class=container-fluid>

        <AuthorizeView>
            <Authorized>
                @if (!IsMasterTenant && RequestPayment)
                {
                    <div class="alert alert-warning text-center" role="alert">
                        Please register a <a href="" class="alert-link" @onclick="OpenPaymentMethodAsync" @onclick:preventDefault>payment method</a> for the tenant subscription.
                    </div>
                }
            </Authorized>
        </AuthorizeView>

        <nav class="navbar navbar-expand navbar-light bg-light navbar-main nav-fill">
            <a class="navbar-brand mr-auto"><img class="logo" src="images/foxids_logo.svg" /></a>
            <AuthorizeView>
                <Authorized>
                    <ul class="navbar-nav nav-item dropdown-nav-item">
                        @if (IsMasterTenant)
                        {
                            <li class="nav-item pt-2">
                                <strong class="align-middle">Master tenant</strong>
                                @if (EnableCreateNewTenant)
                                {
                                    <button type="button" class="btn btn-primary ml-4" @onclick="ShowCreateTenantModalAsync"><span class="oi oi-plus" aria-hidden="true"></span> New Tenant</button>
                                }
                            </li>
                        }
                        else if (TrackSelectedLogic.IsTrackSelected)
                        {
                            <li class="nav-item dropdown">
                                @if (!selectTrackError.IsNullOrWhiteSpace())
                                {
                                    <div class="alert alert-danger" role="alert">
                                        @selectTrackError
                                    </div>
                                }
                                <div class=" form-group active-group active">
                                    <label class="label-control">Environments</label>
                                    <div class="card">
                                        <div class="nav-link dropdown-toggle card-body px-3 py-2 text-left" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <span style="width: 100%">
                                                @if (TrackSelectedLogic.Track.DisplayName.IsNullOrWhiteSpace())
                                                {
                                                    @TrackSelectedLogic.Track.Name <small class="text-muted">@TrackSelectedLogic.Track.Name.GetProdTrackName()</small>
                                                }
                                                else if (!TrackSelectedLogic.Track.Name.Equals(TrackSelectedLogic.Track.DisplayName, StringComparison.InvariantCultureIgnoreCase))
                                                {
                                                    @TrackSelectedLogic.Track.DisplayName <small class="text-muted">(@TrackSelectedLogic.Track.Name)</small>
                                                }
                                                else
                                                {
                                                    @TrackSelectedLogic.Track.DisplayName
                                                }
                                            </span>
                                        </div>
                                        <div class="dropdown-menu search-dropdown px-3 pb-3" aria-labelledby="trackNavbarDropdown">
                                            <PageEditForm @ref="selectTrackFilterForm" TModel="FilterTrackViewModel" OnValidSubmit="OnSelectTrackFilterValidSubmitAsync">
                                                <div class="d-flex">
                                                    <div class="mr-auto info-text">
                                                        An <DocsLink Page="foxids-inside" Fragment="structure">environment</DocsLink> is an Identity Provider with a unique ID, certificate and user store.
                                                    </div>
                                                    <div class="py-2">
                                                        <button type="button" class="btn btn-primary" @onclick="ShowCreateTrackModal"><span class="oi oi-plus" aria-hidden="true"></span> New environment</button>
                                                    </div>
                                                </div>
                                                <div class="form-group active-group pb-2">
                                                    <FInputTextFilter @bind-Value="selectTrackFilterForm.Model.FilterName" For="@(() => selectTrackFilterForm.Model.FilterName)" IncludeActiveFormGroup="false" />
                                                </div>
                                            </PageEditForm>

                                            @if (selectTrackTasks != null)
                                            {
                                                @if (selectTrackTasks.Count() > 0)
                                                {
                                                    <div class="list-striped">
                                                        @foreach (var track in selectTrackTasks)
                                                        {
                                                            @if (track.Name != TrackSelectedLogic.Track.Name)
                                                            {
                                                                @if (selectTrackTasks.Count() > 1 && Constants.Routes.MasterTenantName.Equals(track.Name, StringComparison.OrdinalIgnoreCase))
                                                                {
                                                                    <div class="info-text pl-1 pb-1">
                                                                        Your tenant access is configured in the master environment.
                                                                    </div>
                                                                }
                                                                <button type="button" class="dropdown-item btn btn-link pl-1 pr-1" @onclick="@(() => SelectTrackAsync(track))">
                                                                    @if (track.DisplayName.IsNullOrWhiteSpace())
                                                                    {
                                                                        @track.Name <small class="text-muted">@track.Name.GetProdTrackName()</small>
                                                                    }
                                                                    else if (!track.Name.Equals(track.DisplayName, StringComparison.InvariantCultureIgnoreCase))
                                                                    {
                                                                        @track.DisplayName <small class="text-muted">(@track.Name)</small>
                                                                    }
                                                                    else
                                                                    {
                                                                        @track.DisplayName
                                                                    }
                                                                </button>
                                                                <div class="list-striped-item"></div>
                                                            }
                                                        }
                                                    </div>
                                                }
                                                else if (!selectTrackFilterForm.Model.FilterName.IsNullOrWhiteSpace())
                                                {
                                                    <div class="font-italic pl-1">No match</div>
                                                }
                                            }
                                        </div>
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <DocsLink Class="nav-link">Documentation</DocsLink>
                        </li>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" id="meNavbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <span class="oi oi-person" aria-hidden="true"></span>
                            </a>
                            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="meNavbarDropdown">
                                <button type="button" class="dropdown-item btn btn-link" @onclick="@(() => { myProfileError = null; showMyProfileClaims = false; myProfileModal.Show(); })">
                                    My Profile<br />
                                    <small>@context.User.Claims.Where(c => c.Type == JwtClaimTypes.Email).Select(c => c.Value).FirstOrDefault()</small>
                                </button>
                                <div class="dropdown-divider"></div>
                                <LoginDisplay />
                            </div>
                        </li>
                    </ul>
                </Authorized>
            </AuthorizeView>
        </nav>

        <AuthorizeView>
            <Authorized>
                <div class="navbar-outline">
                    <nav class="container-lg navbar @(IsMasterTenant ? "navbar-expand-master" : "navbar-expand-env") navbar-light navbar-second">
                        <div class="align-text-top">
                            <button type="button" class="navbar-toggler my-2 mr-3" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                                <span class="navbar-toggler-icon"></span>
                            </button>
                        </div>
                        <div class="collapse navbar-collapse" id="navbarSupportedContent">
                            <ul class="navbar-nav">
                                @if (IsMasterTenant)
                                {
                                    <TenantLiNavLink Href="tenants">
                                        Tenants
                                    </TenantLiNavLink>
                                }
                                else if (IsMasterTrack)
                                {
                                    <TenantLiNavLink Href="tenant">
                                        Tenant
                                    </TenantLiNavLink>
                                }
                                <TenantLiNavLink Href="applications">
                                    Applications
                                </TenantLiNavLink>
                                <TenantLiNavLink Href="authentication">
                                    Authentication
                                </TenantLiNavLink>
                                <TenantLiNavLink Href="internalusers" SubPages="externalusers,failingloginlocks,refreshtokengrants">
                                    Users
                                </TenantLiNavLink>
                                <TenantLiNavLink Href="certificates">
                                    Certificates
                                </TenantLiNavLink>
                                @if (IsMasterTenant && ClientSettings.EnablePayment)
                                {
                                    <TenantLiNavLink Href="usage" SubPages="usagetenats,usagesettings">
                                        Usage
                                    </TenantLiNavLink>
                                }
                                @if (ClientSettings.LogOption != LogOptions.Stdout)
                                {
                                    <TenantLiNavLink Href="logs" SubPages="logusage,logaudit,logsettings">
                                        Logs
                                    </TenantLiNavLink>
                                }
                                else
                                {
                                    <TenantLiNavLink Href="logsettings">
                                        Logs
                                    </TenantLiNavLink>
                                }
                                <TenantLiNavLink Href="envsettings" SubPages="tenantsettings,mailsettings,smssettings,claimmappings,texts,plans,smsprices,riskpasswords">
                                    Settings
                                </TenantLiNavLink>
                            </ul>
                        </div>
                    </nav>
                </div>
            </Authorized>
        </AuthorizeView>

        <AuthorizeView>
            <Authorized>
                <Modal @ref="createTenantModal" Title="Create New Tenant">
                    <PageEditForm @ref="createTenantForm" TModel="CreateTenantViewModel" OnValidSubmit="OnCreateTenantValidSubmitAsync">
                        <div class="modal-body">
                            <FInputText @bind-Value="createTenantForm.Model.Name" For="@(() => createTenantForm.Model.Name)" Focus="true" />
                            <FInputText @bind-Value="createTenantForm.Model.AdministratorEmail" For="@(() => createTenantForm.Model.AdministratorEmail)" />
                            <FInputPassword @bind-Value="createTenantForm.Model.AdministratorPassword" For="@(() => createTenantForm.Model.AdministratorPassword)" />
                            <FInputToggle @bind-Value="createTenantForm.Model.ChangeAdministratorPassword" For="@(() => createTenantForm.Model.ChangeAdministratorPassword)" />
                            <FInputToggle @bind-Value="createTenantForm.Model.ConfirmAdministratorAccount" For="@(() => createTenantForm.Model.ConfirmAdministratorAccount)" />

                            @if (ClientSettings.EnablePayment && planInfoList != null)
                            {
                                <FInputSelect @bind-Value="createTenantForm.Model.PlanName" For="@(() => createTenantForm.Model.PlanName)">
                                    <option value=""></option>
                                    @foreach (var planInfo in planInfoList)
                                    {
                                        <option value="@planInfo.Name">@(planInfo.DisplayName ?? planInfo.Name)</option>
                                    }
                                </FInputSelect>
                            }

                            <ul class="list-group list-group-flush">
                                @foreach (var receipt in createTenantReceipt)
                                {
                                    <li class="list-group-item"><span class="oi oi-check" style="color: #62cd62;" aria-hidden="true"></span> @receipt</li>
                                }
                            </ul>
                        </div>
                        <div class="modal-footer">
                            @if (!createTenantDone)
                            {
                                <button type="submit" class="btn btn-primary @(createTenantWorking ? "disabled" : "")">Create</button>
                                <button type="button" class="btn btn-secondary @(createTenantWorking ? "disabled" : "")" @onclick="@(() => createTenantModal.Hide())">Cancel</button>
                            }
                            else
                            {
                                <button type="button" class="btn btn-secondary" @onclick="@(() => createTenantModal.Hide())">Close</button>
                            }
                        </div>
                    </PageEditForm>
                </Modal>

                <Modal @ref="createTrackModal" Title="Create New Environment">
                    <PageEditForm @ref="createTrackForm" TModel="CreateTrackViewModel" OnValidSubmit="OnCreateTrackValidSubmitAsync">
                        <div class="modal-body">
                            <div class="text-right pb-2">
                                <FInputSwitchAdvancedOptions @bind-Value="createTrackShowAdvanced" />
                            </div>

                            <div class="mr-auto info-text">
                                Create a new environment with the name you want.
                            </div>
                            <FInputText @bind-Value="createTrackForm.Model.DisplayName" For="@(() => createTrackForm.Model.DisplayName)" Focus="true" />

                            @if (createTrackShowAdvanced)
                            {
                                <div class="mr-auto info-text">
                                    Enter the Technical name you want for the environment, otherwise auto generated.
                                </div>
                                <FInputText @bind-Value="createTrackForm.Model.Name" For="@(() => createTrackForm.Model.Name)" />
                            }

                            <ul class="list-group list-group-flush">
                                @foreach (var receipt in createTrackReceipt)
                                {
                                    <li class="list-group-item"><span class="oi oi-check" style="color: #62cd62;" aria-hidden="true"></span> @receipt</li>
                                }
                            </ul>
                        </div>
                        <div class="modal-footer">
                            @if (!createTrackDone)
                            {
                                <button type="submit" class="btn btn-primary @(createTrackWorking ? "disabled" : "")">Create</button>
                                <button type="button" class="btn btn-secondary @(createTrackWorking ? "disabled" : "")" @onclick="@(() => createTrackModal.Hide())">Cancel</button>
                            }
                            else
                            {
                                <button type="button" class="btn btn-secondary" @onclick="@(() => createTrackModal.Hide())">Close</button>
                            }
                        </div>
                    </PageEditForm>
                </Modal>

                <Modal @ref="myProfileModal" Title="My Profile">
                    <div class="modal-body">
                        @if (!myProfileError.IsNullOrWhiteSpace())
                        {
                            <div class="alert alert-danger" role="alert">
                                @myProfileError
                            </div>
                        }
                        @if (myProfileMasterMasterLogin)
                        {
                            <div class="form-group active-group active">
                                <button type="button" class="btn btn-secondary" @onclick="ChangeMyPasswordAsync">Change your password</button>
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-info" role="alert">
                                Your user is federated and do not have any profile settings.
                            </div>
                        }

                        @if (myProfileClaims != null)
                        {
                            <div class="pt-3">
                                <div class="form-group active-group active">
                                    <label class="label-control">My claims</label>
                                    @if (!showMyProfileClaims)
                                    {
                                        <div class="info-text pl-3">
                                            <a href="" @onclick="@(() => { showMyProfileClaims = true; })" @onclick:preventDefault>Show my claims</a> <span>issued to this Control Client by FoxIDs.</span>
                                        </div>
                                    }
                                    else
                                    {
                                        @foreach (var claim in myProfileClaims)
                                        {
                                            <ul class="list-group list-group-flush">
                                                <li class="list-group-item py-1">@claim.Type: <i>@claim.Value</i></li>
                                            </ul>
                                        }
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </Modal>

                <Modal @ref="notAccessModal" Title="Not access" DisableClose="true">
                    <div class="modal-body">
                        <div class="alert alert-danger" role="alert">
                            You do not have access.
                        </div>
                        <div class="row">
                            <div class="col text-center">
                                <button type="button" class="btn btn-secondary" @onclick="LogoutAsync">Logout</button>
                            </div>
                        </div>
                    </div>
                </Modal>
            </Authorized>
        </AuthorizeView>

        <div class="container-lg main-container">
            <AuthorizeView>
                <NotAuthorized >
                    <ActivateLogin />
                </NotAuthorized>
            </AuthorizeView>
            @if (IsMasterTenant || TrackSelectedLogic.IsTrackSelected)
            {
                @Body
            }            
        </div>
    </div>

    <footer class="footer-container">
        <span class="footer-content">&copy; @DateTime.Now.Year FoxIDs<small title="@(ClientSettings.Version.IsNullOrEmpty() ? string.Empty : $"Version {ClientSettings.FullVersion}")">@(ClientSettings.Version.IsNullOrEmpty() ? string.Empty : $", version {ClientSettings.Version}")</small></span>
    </footer>
</div>


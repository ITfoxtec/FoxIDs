@inherits LayoutComponentBase

<BlazoredToasts Timeout="2" ShowCloseButton=false RemoveToastsOnNavigation=true />

<div class="min-vh-100 d-flex flex-column
                justify-content-between">
    <div class=container-fluid>

        <nav class="navbar navbar-expand navbar-light bg-light navbar-main nav-fill">
            <a class="navbar-brand mr-auto">Fox<span class="navbar-subbrand">ID</span>s</a>
            <AuthorizeView>
                <Authorized>
                    <ul class="navbar-nav nav-item dropdown-nav-item">
                        @if (RouteBindingLogic.IsMasterTenant)
                        {
                            <li class="nav-item pt-2">
                                <strong class="align-middle">Master tenant</strong>
                                <button class="btn btn-link" @onclick="ShowCreateTenantModal"><span class="oi oi-plus" aria-hidden="true"></span> Create Tenant</button>
                            </li>
                        }
                        else if (TrackSelectedLogic.IsTrackSelected)
                        {
                            <li class="nav-item dropdown">
                                @if (!selectTrackError.IsNullOrWhiteSpace())
                                {
                                    <div class="alert alert-danger" role="alert">
                                        @selectTrackError
                                    </div>
                                }
                                <div class=" form-group active-group active">
                                    <label class="label-control">Track</label>
                                    <div class="card">
                                        <div class="nav-link dropdown-toggle card-body px-3 py-2 text-left" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <span style="width: 100%">@TrackSelectedLogic.Track.Name <small class="text-muted">@TrackSelectedLogic.Track.Name.GetProdTrackName()</small></span>
                                        </div>
                                        <div class="dropdown-menu search-dropdown px-3 pb-3" aria-labelledby="trackNavbarDropdown">
                                            <PageEditForm @ref="selectTrackFilterForm" TModel="FilterTrackViewModel" OnValidSubmit="OnSelectTrackFilterValidSubmitAsync">
                                                <div class="form-group mb-1 text-right">
                                                    <button class="btn btn-link pr-0" @onclick="ShowCreateTrackModal"><span class="oi oi-plus" aria-hidden="true"></span> Create Track</button>
                                                </div>
                                                <div class="form-group active-group pb-2">
                                                    <FInputTextFilter @bind-Value="selectTrackFilterForm.Model.FilterName" For="@(() => selectTrackFilterForm.Model.FilterName)" IncludeActiveFormGroup="false" />
                                                </div>
                                            </PageEditForm>

                                            @if (selectTrackTasks != null)
                                            {
                                                @foreach (var track in selectTrackTasks)
                                                {
                                                    <button class="dropdown-item btn btn-link pl-1 pr-1" @onclick="@(() => SelectTrackAsync(track))">
                                                        @track.Name <small class="text-muted">@track.Name.GetProdTrackName()</small>
                                                    </button>
                                                }
                                            }

                                        </div>
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                    <ul class="navbar-nav">
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" id="meNavbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <span class="oi oi-person" aria-hidden="true"></span>
                            </a>
                            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="meNavbarDropdown">
                                <button class="dropdown-item btn btn-link" @onclick="@(() => { myProfileModal.Show(); })">
                                    My Claims<br />
                                    <small>@context.User.Claims.Where(c => c.Type == JwtClaimTypes.Email).Select(c => c.Value).FirstOrDefault()</small>
                                </button>
                                <div class="dropdown-divider"></div>
                                <LoginDisplay />
                            </div>
                        </li>
                    </ul>
                </Authorized>
            </AuthorizeView>
        </nav>

        <AuthorizeView>
            <Authorized>
                <nav class="navbar navbar-expand navbar-light bg-light navbar-second">
                    <div class="container-lg">
                        <ul class="navbar-nav">
                            @if (RouteBindingLogic.IsMasterTenant)
                            {
                                <TenantLiNavLink Href="tenants">
                                    Tenants
                                </TenantLiNavLink>
                            }
                            <TenantLiNavLink Href="downparties" SubPages="upparties">
                                Parties
                            </TenantLiNavLink>
                            <TenantLiNavLink Href="users">
                                Users
                            </TenantLiNavLink>
                            <TenantLiNavLink Href="certificates">
                                Certificates
                            </TenantLiNavLink>
                            <TenantLiNavLink Href="logusages" SubPages="logs,logsettings">
                                Logs
                            </TenantLiNavLink>
                            <TenantLiNavLink Href="texts">
                                Text
                            </TenantLiNavLink>
                            @if (RouteBindingLogic.IsMasterTenant)
                            {
                                <TenantLiNavLink Href="plans">
                                    Plans
                                </TenantLiNavLink>
                                <TenantLiNavLink Href="riskpasswords">
                                    Risk Passwords
                                </TenantLiNavLink>
                            }
                            <TenantLiNavLink Href="tracksettings" SubPages="tenantsettings,mailsettings,claimmappings">
                                Settings
                            </TenantLiNavLink>
                        </ul>
                    </div>
                </nav>
            </Authorized>
        </AuthorizeView>

        <AuthorizeView>
            <Authorized>
                <Modal @ref="createTenantModal" Title="Create Tenant">
                    <PageEditForm @ref="createTenantForm" TModel="CreateTenantViewModel" OnValidSubmit="OnCreateTenantValidSubmitAsync">
                        <div class="modal-body">
                            <FInputText @bind-Value="createTenantForm.Model.Name" For="@(() => createTenantForm.Model.Name)" Focus="true" />
                            <FInputText @bind-Value="createTenantForm.Model.AdministratorEmail" For="@(() => createTenantForm.Model.AdministratorEmail)" />
                            <FInputPassword @bind-Value="createTenantForm.Model.AdministratorPassword" For="@(() => createTenantForm.Model.AdministratorPassword)" />
                            <FInputToggle @bind-Value="createTenantForm.Model.ChangeAdministratorPassword" For="@(() => createTenantForm.Model.ChangeAdministratorPassword)" />
                            <FInputToggle @bind-Value="createTenantForm.Model.ConfirmAdministratorAccount" For="@(() => createTenantForm.Model.ConfirmAdministratorAccount)" />

                            <FInputText @bind-Value="createTenantForm.Model.PlanName" For="@(() => createTenantForm.Model.PlanName)" />

                            <ul class="list-group list-group-flush">
                                @foreach (var receipt in createTenantReceipt)
                                {
                                    <li class="list-group-item"><span class="oi oi-check" style="color: #62cd62;" aria-hidden="true"></span> @receipt</li>
                                }
                            </ul>
                        </div>
                        <div class="modal-footer">
                            @if (!createTenantDone)
                            {
                                <button type="submit" class="btn btn-primary @(createTenantWorking ? "disabled" : "")">Create</button>
                                <button type="button" class="btn btn-secondary @(createTenantWorking ? "disabled" : "")" @onclick="@(() => createTenantModal.Hide())">Cancel</button>
                            }
                            else
                            {
                                <button type="button" class="btn btn-secondary" @onclick="@(() => createTenantModal.Hide())">Close</button>
                            }
                        </div>
                    </PageEditForm>
                </Modal>

                <Modal @ref="createTrackModal" Title="Create Track">
                    <PageEditForm @ref="createTrackForm" TModel="CreateTrackViewModel" OnValidSubmit="OnCreateTrackValidSubmitAsync">
                        <div class="modal-body">
                            <FInputText @bind-Value="createTrackForm.Model.Name" For="@(() => createTrackForm.Model.Name)" Focus="true" />

                            <ul class="list-group list-group-flush">
                                @foreach (var receipt in createTrackReceipt)
                                {
                                    <li class="list-group-item"><span class="oi oi-check" style="color: #62cd62;" aria-hidden="true"></span> @receipt</li>
                                }
                            </ul>
                        </div>
                        <div class="modal-footer">
                            @if (!createTrackDone)
                            {
                                <button type="submit" class="btn btn-primary @(createTrackWorking ? "disabled" : "")">Create</button>
                                <button type="button" class="btn btn-secondary @(createTrackWorking ? "disabled" : "")" @onclick="@(() => createTrackModal.Hide())">Cancel</button>
                            }
                            else
                            {
                                <button type="button" class="btn btn-secondary" @onclick="@(() => createTrackModal.Hide())">Close</button>
                            }
                        </div>
                    </PageEditForm>
                </Modal>

                <Modal @ref="myProfileModal" Title="My Claims">
                    <div class="modal-body">
                        <ul class="list-group list-group-flush">
                            @if (myProfileClaims != null)
                            {
                                @foreach (var claim in myProfileClaims)
                                {
                                    <li class="list-group-item">@claim.Type: @claim.Value</li>
                                }
                            }
                        </ul>
                    </div>
                </Modal>

                <Modal @ref="notAccessModal" Title="Not access" DisableClose="true">
                    <div class="modal-body">
                        <div class="alert alert-danger" role="alert">
                            You do not have access.
                        </div>
                        <div class="row">
                            <div class="col text-center">
                                <button class="btn btn-secondary" @onclick="LogoutAsync">Logout</button>
                            </div>
                        </div>
                    </div>
                </Modal>
            </Authorized>
        </AuthorizeView>

        <div class="container-lg main-container">
            <AuthorizeView>
                <NotAuthorized>
                    <p>Authentication is in progress...</p>
                </NotAuthorized>
            </AuthorizeView>
            @if (RouteBindingLogic.IsMasterTenant || TrackSelectedLogic.IsTrackSelected)
            {
                @Body
            }            
        </div>
    </div>

    <footer class="footer-container">
        <span class="footer-content">&copy; @DateTime.Now.Year FoxIDs<small title="@(clientSettings.Version.IsNullOrEmpty() ? string.Empty : $"Version {clientSettings.FullVersion}")">@(clientSettings.Version.IsNullOrEmpty() ? string.Empty : $", version {clientSettings.Version}")</small></span>
    </footer>
</div>


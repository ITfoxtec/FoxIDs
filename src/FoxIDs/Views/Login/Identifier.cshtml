@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@model IdentifierViewModel

@{
    ViewData["Title"] = Localizer["Log in"];
}

<h1 class="heading">@ViewData["Title"]</h1>

<div class="row page-container name-identifier">
    <div class="col-md page-content">
        @if (Model.ShowUserIdentifierSelection)
        {
            <form method="post">
                <div asp-validation-summary="ModelOnly"></div>
                @if (Model.EmailIdentifier != null)
                {
                    <div class="form-group active-group">
                        <input asp-for="EmailIdentifier.Email" autocomplete="username" class="form-control input-control" autofocus />
                        <label asp-for="EmailIdentifier.Email" class="label-control"></label>
                        <span asp-validation-for="EmailIdentifier.Email"></span>
                    </div>
                }
                else if (Model.PhoneIdentifier != null)
                {
                    <div class="form-group active-group">
                        <input asp-for="PhoneIdentifier.Phone" autocomplete="username" class="form-control input-control" autofocus />
                        <label asp-for="PhoneIdentifier.Phone" class="label-control"></label>
                        <span asp-validation-for="PhoneIdentifier.Phone"></span>
                    </div>
                }
                else if (Model.UsernameIdentifier != null)
                {
                    <div class="form-group active-group">
                        <input asp-for="UsernameIdentifier.Username" autocomplete="username" class="form-control input-control" autofocus />
                        <label asp-for="UsernameIdentifier.Username" class="label-control"></label>
                        <span asp-validation-for="UsernameIdentifier.Username"></span>
                    </div>
                }
                else if (Model.UsernameEmailIdentifier != null)
                {
                    <div class="form-group active-group">
                        <input asp-for="UsernameEmailIdentifier.UserIdentifier" autocomplete="username" class="form-control input-control" autofocus />
                        <label asp-for="UsernameEmailIdentifier.UserIdentifier" class="label-control"></label>
                        <span asp-validation-for="UsernameEmailIdentifier.UserIdentifier"></span>
                    </div>
                }
                else if (Model.UsernamePhoneIdentifier != null)
                {
                    <div class="form-group active-group">
                        <input asp-for="UsernamePhoneIdentifier.UserIdentifier" autocomplete="username" class="form-control input-control" autofocus />
                        <label asp-for="UsernamePhoneIdentifier.UserIdentifier" class="label-control"></label>
                        <span asp-validation-for="UsernamePhoneIdentifier.UserIdentifier"></span>
                    </div>
                }
                else if (Model.PhoneEmailIdentifier != null)
                {
                    <div class="form-group active-group">
                        <input asp-for="PhoneEmailIdentifier.UserIdentifier" autocomplete="username" class="form-control input-control" autofocus />
                        <label asp-for="PhoneEmailIdentifier.UserIdentifier" class="label-control"></label>
                        <span asp-validation-for="PhoneEmailIdentifier.UserIdentifier"></span>
                    </div>
                }
                else if (Model.UsernamePhoneEmailIdentifier != null)
                {
                    <div class="form-group active-group">
                        <input asp-for="UsernamePhoneEmailIdentifier.UserIdentifier" autocomplete="username" class="form-control input-control" autofocus />
                        <label asp-for="UsernamePhoneEmailIdentifier.UserIdentifier" class="label-control"></label>
                        <span asp-validation-for="UsernamePhoneEmailIdentifier.UserIdentifier"></span>
                    </div>
                }
                <div class="form-group button-group">
                    <input type="submit" value="@Localizer["Next"]" class="btn btn-primary" />
                    @if (Model.EnableCancelLogin)
                    {
                        <a href="../@Constants.Endpoints.CancelLogin/_@Model.SequenceString" class="btn btn-light">@Localizer["Cancel"]</a>
                    }
                </div>
                @if (Model.EnableCreateUser)
                {
                    <div class="form-group create-user-group">
                        @Localizer["Don't have an account?"]
                        <a href="../@Constants.Endpoints.CreateUser/_@Model.SequenceString" class="link create-user">@Localizer["Create user"]</a>
                    </div>
                }
            </form>
        }

        @if (Model.UpPatries?.Count() > 0)
        {
            <form id="form-filter">
                @if (Model.ShowUserIdentifierSelection)
                {
                    <hr class="dividing-line">
                }
                <div class="info-message info-message-filter">
                    @if (Model.ShowUserIdentifierSelection)
                    {
                        @Localizer["OR select where to log in"]
                    }
                    else
                    {
                        @Localizer["Select where to log in"]
                    }
                </div>
                @if (Model.UpPatries.Count() > 10)
                {
                    <div class="form-group active-group group-filter">
                        <div class="input-group">
                            <input asp-for="UpPartyFilter" class="form-control input-control" />
                            <label asp-for="UpPartyFilter" class="label-control"></label>
                            <div class="input-group-append">
                                <button class="btn btn-primary" type="submit">@Localizer["Search"]</button>
                            </div>
                        </div>
                    </div>
                }
                <div class="list-filter">
                    @foreach (var upParty in Model.UpPatries)
                    {
                        <a up-party-name="@upParty.Name" class="list-item-filter btn btn-light" href="../@nameof(FoxIDs.Controllers.LoginController.LoginUpParty).ToLower()/_@Model.SequenceString?name=@upParty.Name&profilename=@upParty.ProfileName">
                            @if (!upParty.LogoUrl.IsNullOrEmpty())
                            {
                                    <img src="@upParty.LogoUrl" class="img-item-filter" alt="@upParty.DisplayName">
                            }
                            @if (!upParty.DisplayName.IsNullOrEmpty())
                            {
                                <span class="text-item-filter">@upParty.DisplayName</span>
                            }
                        </a>                                
                    }
                </div>
            </form>
        }
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

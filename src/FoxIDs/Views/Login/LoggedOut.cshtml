@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Localization
@inject IViewLocalizer Localizer
@inject IStringLocalizer StringLocalizer
@model LoggedOutViewModel

@{
    ViewData["Title"] = Localizer["logged out"];
}

<h1 class="heading">@ViewData["Title"]</h1>

@foreach (var element in Model.Elements)
{
    if (element is LoginInputDElement)
    {
        <div class="row page-container name-logged-out">
            <div class="col-md page-content">
                <div class="info-group">
                    @Localizer["You are now logged out!"]
                </div>
            </div>
        </div>
    }
    else if (element is ContentDElement contentDElement)
    {
        <div class="form-group active-group login-dynamic-element">
            @if (contentDElement.IsHtml)
            {
                @Html.GetHtmlControl(contentDElement.DContent, StringLocalizer)
            }
            else
            {
                @Html.GetTextControl(contentDElement.DContent, StringLocalizer)
            }
        </div>
    }
    else if (element is LoginButtonDElement || element is LoginLinkDElement || element is LoginHrdDElement)
    {
        // Placeholder elements ignored on logged-out view.
    }
    else
    {
        throw new NotSupportedException($"Dynamic element type '{element.GetTypeName()}' not supported.");
    }
}

@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@model PasswordViewModel

@{
    ViewData["Title"] = Localizer["Log in"];
}

<h1 class="heading">@ViewData["Title"]</h1>

<div class="row page-container name-password">
    <div class="col-md page-content">
        <form method="post">
            <div asp-validation-summary="ModelOnly"></div>
            @{await Html.RenderPartialAsync("_AuthenticationIdentifiers");}
            <div class="form-group active-group">
                <input asp-for="Password" autocomplete="current-password" class="form-control input-control" autofocus />
                <label asp-for="Password" class="label-control"></label>
                <span asp-validation-for="Password"></span>
            </div>
            <div class="form-group button-group">
                <input type="submit" value="@Localizer["Log in"]" class="btn btn-primary" />
                @if (Model.ShowCancelLogin)
                {
                    <a href="../@Constants.Endpoints.CancelLogin/_@Model.SequenceString" class="btn btn-light">@Localizer["Cancel"]</a>
                }
                @if (Model.ShowSetPassword)
                {
                    <a href="../../@Constants.Routes.ActionController/@Constants.Endpoints.SetPassword/_@Model.SequenceString" class="btn btn-link float-right forgot-password">@Localizer["Forgot your password?"]</a>
                }
            </div>
            @if (Model.ShowPasswordlessSms || Model.ShowPasswordlessEmail)
            {
                <div class="form-group button-group another-authentication-group">
                    @Localizer["Try another method?"]
                    @if (Model.ShowPasswordlessSms && Model.ShowPasswordlessEmail)
                    {
                        @Localizer["Use one-time password via <a href=\"{0}\" class=\"{1}\">SMS</a> or <a href=\"{2}\" class=\"{3}\">email</a>.",
                                 $"../_{Model.SequenceString}?passwordlesssms=true", "link passwordless-sms",
                                 $"../_{Model.SequenceString}?passwordlessemail=true", "link passwordless-email"];
                    }
                    else @if (Model.ShowPasswordlessSms)
                    {
                        @Localizer["<a href=\"{0}\" class=\"{1}\">Use one-time password via SMS.</a>", $"../_{Model.SequenceString}?passwordlesssms=true", "link passwordless-sms"];
                    }
                    else @if (Model.ShowPasswordlessEmail)
                    {
                        @Localizer["<a href=\"{0}\" class=\"{1}\">Use one-time password via email.</a>", $"../_{Model.SequenceString}?passwordlessemail=true", "link passwordless-email"];
                    }
                </div>
            }
            @if (Model.ShowCreateUser)
            {
                <div class="form-group button-group create-user-group @(Model.ShowPasswordlessSms || Model.ShowPasswordlessEmail ? "nested-group" : string.Empty)">
                    @Localizer["Don't have an account?"]
                    <a href="../@Constants.Endpoints.CreateUser/_@Model.SequenceString" class="link create-user">@Localizer["Create user"]</a>
                </div>
            }
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

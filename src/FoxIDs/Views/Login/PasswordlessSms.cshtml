@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@model PasswordlessSmsViewModel

@{
    ViewData["Title"] = Localizer["Log in"];
}

<h1 class="heading">@ViewData["Title"]</h1>

<div class="row page-container name-password">
    <div class="col-md page-content">
        <form method="post">
            <div asp-validation-summary="ModelOnly"></div>
            @{await Html.RenderPartialAsync("_AuthenticationIdentifiers");}
            <div class="info-message-sub">@(Model.ForceNewCode ? Localizer["A new one-time password code has been sent to your phone."] : Localizer["A one-time password code has just been sent to your phone."])</div>
            <div class="form-group active-group">
                <input asp-for="Code" autocomplete="off" class="form-control input-control" autofocus />
                <label asp-for="Code" class="label-control"></label>
                <span asp-validation-for="Code"></span>
            </div>
            <div class="form-group button-group">
                <input type="submit" value="@Localizer["Log in"]" class="btn btn-primary" />
                @if (Model.ShowCancelLogin)
                {
                    <a href="../@Constants.Endpoints.CancelLogin/_@Model.SequenceString" class="btn btn-light">@Localizer["Cancel"]</a>
                }
                <a href="../_@Model.SequenceString?newcode=true" class="btn btn-link float-right forgot-password">@Localizer["Send new one-time password code"]</a>
            </div>
            @if (Model.ShowPasswordlessEmail || Model.ShowPasswordAuth)
            {
                <div class="form-group button-group another-authentication-group">
                    @Localizer["Try another method?"]
                    @if (Model.ShowPasswordlessEmail && Model.ShowPasswordAuth)
                    {
                        @Localizer["Use <a href=\"{0}\" class=\"{1}\">one-time password via email</a> or <a href=\"{2}\" class=\"{3}\">your password</a>.",
                                 $"../_{Model.SequenceString}?passwordlessemail=true", "link passwordless-email",
                                 $"../_{Model.SequenceString}?passwordauth=true", "link password-auth"];
                    }
                    else @if (Model.ShowPasswordlessEmail)
                    {
                        @Localizer["<a href=\"{0}\" class=\"{1}\">Use one-time password via email.</a>", $"../_{Model.SequenceString}?passwordlessemail=true", "link passwordless-email"];
                    }
                    else @if (Model.ShowPasswordAuth)
                    {
                        @Localizer["<a href=\"{0}\" class=\"{1}\">Use your password.</a>", $"../_{Model.SequenceString}?passwordauth=true", "link passwordless-auth"];
                    }
                </div>
            }
            @if (Model.ShowCreateUser)
            {
                <div class="form-group button-group create-user-group">
                    @Localizer["Don't have an account?"]
                    <a href="../@Constants.Endpoints.CreateUser/_@Model.SequenceString" class="link create-user">@Localizer["Create user"]</a>
                </div>
            }
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

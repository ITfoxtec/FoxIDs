<!DOCTYPE html>
<html lang="@(Html.ParentCultureName())">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <environment include="Development">
        <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" asp-append-version="true" />
        <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    </environment>
    <environment exclude="Development">
        <link rel="stylesheet" href="~/css/site1.min.css" asp-append-version="true" />
    </environment>
    @if (Model is ViewModel generalViewModel)
    {
        var title = !generalViewModel.Title.IsNullOrWhiteSpace() ? generalViewModel.Title : "FoxIDs";
        <title>@title@(ViewData.ContainsKey("Title") ? " - " : string.Empty)@ViewData["Title"]</title>

        if (!generalViewModel.IconUrl.IsNullOrWhiteSpace())
        {
            var iconUrl = generalViewModel.IconUrl;
            string iconType;

            if (iconUrl.StartsWith("data:", System.StringComparison.OrdinalIgnoreCase))
            {
                var commaIndex = iconUrl.IndexOf(',');
                var metadata = commaIndex > 5 ? iconUrl.Substring(5, commaIndex - 5) : string.Empty;
                var semicolonIndex = metadata.IndexOf(';');
                iconType = semicolonIndex >= 0 ? metadata.Substring(0, semicolonIndex) : metadata;
                if (iconType.IsNullOrWhiteSpace())
                {
                    iconType = "image/png";
                }
            }
            else
            {
                var iconPath = iconUrl.Split(['?', '#'], 2)[0];
                var iconExtension = System.IO.Path.GetExtension(iconPath)?.ToLowerInvariant();
                iconType = iconExtension switch
                {
                    ".png" => "image/png",
                    ".gif" => "image/gif",
                    ".jpeg" => "image/jpeg",
                    ".jpg" => "image/jpeg",
                    ".webp" => "image/webp",
                    _ => "image/x-icon",
                };
            }

            <link rel="icon" type="@iconType" href="@iconUrl" />
        }

        if (!generalViewModel.Css.IsNullOrWhiteSpace())
        {
            <style type="text/css">
                @Html.Raw(generalViewModel.Css)
            </style>
        }
    }
</head>
<body>
    <div class="container brand-container">
        <span class="brand-content-text"><img src="~/images/foxids_logo.svg" /></span>
        <span class="brand-content-icon"></span>
    </div>

    <div class="container content-container">
        @RenderBody()
    </div>

    <footer class="footer-container">
        <div class="container">
            @{
                var version = GetType().Assembly.GetName().Version;
            }
            <span class="footer-content">&copy; @DateTime.Now.Year FoxIDs<small class="footer-version">, version @(version.ToString(3))</small></span>
        </div>
    </footer>

    <environment include="Development">
        <script src="~/lib/jquery/dist/jquery.js" asp-append-version="true"></script>
        <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.js" asp-append-version="true"></script>
        <script src="~/js/site.js" asp-append-version="true"></script>
    </environment>
    <environment exclude="Development">
        <script src="~/js/site1.min.js" asp-append-version="true"></script>
    </environment>

    @RenderSection("Scripts", required: false)
</body>
</html>
